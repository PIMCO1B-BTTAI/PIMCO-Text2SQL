Test_Din Output Log
================================================================================
Ground Truth Query: WITH DefaultMetrics AS (
    SELECT 
        h.QUARTER,
        h.FAIR_VALUE_LEVEL,
        COUNT(DISTINCT h.HOLDING_ID) as Total_Bonds,
        COUNT(DISTINCT CASE WHEN d.IS_DEFAULT = 'Y' THEN h.HOLDING_ID END) as Defaulted_Bonds,
        COUNT(DISTINCT CASE WHEN d.ARE_ANY_INTEREST_PAYMENT = 'Y' THEN h.HOLDING_ID END) as Missed_Payments,
        SUM(CAST(h.CURRENCY_VALUE AS FLOAT)) as Total_Value
    FROM 
        FUND_REPORTED_HOLDING h
        JOIN DEBT_SECURITY d ON h.HOLDING_ID = d.HOLDING_ID
    WHERE 
        h.FAIR_VALUE_LEVEL IS NOT NULL
    GROUP BY 
        h.QUARTER,
        h.FAIR_VALUE_LEVEL
)
SELECT 
    QUARTER,
    FAIR_VALUE_LEVEL,
    Total_Bonds,
    Defaulted_Bonds,
    Missed_Payments,
    ROUND(Total_Value / 1000000, 2) as Value_Millions,
    ROUND(Defaulted_Bonds * 100.0 / NULLIF(Total_Bonds, 0), 2) as Default_Rate,
    ROUND(Missed_Payments * 100.0 / NULLIF(Total_Bonds, 0), 2) as Missed_Payment_Rate
FROM 
    DefaultMetrics
WHERE 
    Total_Bonds >= 10
ORDER BY 
    QUARTER DESC,
    FAIR_VALUE_LEVEL;
================================================================================
Schema Links for Question: Track bond default rates and interest payment issues by credit rating
{'table_columns': ['debt_security.are_any_interest_payment', 'convertible_security_currency.conversion_ratio', 'interest_rate_risk.interest_rate_risk_id', 'debt_security.is_default', 'interest_rate_risk.interest_rate_risk_id', 'fund_reported_info.credit_spread_3mon_invest', 'debt_security_ref_instrument.issue_title'], 'primary_keys': ['FUND_REPORTED_INFO.ACCESSION_NUMBER', 'INTEREST_RATE_RISK.ACCESSION_NUMBER', 'INTEREST_RATE_RISK.INTEREST_RATE_RISK_ID', 'DEBT_SECURITY_REF_INSTRUMENT.HOLDING_ID', 'DEBT_SECURITY_REF_INSTRUMENT.DEBT_SECURITY_REF_ID', 'CONVERTIBLE_SECURITY_CURRENCY.HOLDING_ID', 'CONVERTIBLE_SECURITY_CURRENCY.CONVERTIBLE_SECURITY_ID'], 'foreign_keys': ['REGISTRANT.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'INTEREST_RATE_RISK.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'BORROWER.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'BORROW_AGGREGATE.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'MONTHLY_TOTAL_RETURN.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'MONTHLY_RETURN_CAT_INSTRUMENT.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'FUND_VAR_INFO.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'FUND_REPORTED_HOLDING.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'EXPLANATORY_NOTE.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'SUBMISSION.ACCESSION_NUMBER = FUND_REPORTED_INFO.ACCESSION_NUMBER', 'DEBT_SECURITY.HOLDING_ID = FUND_REPORTED_HOLDING.HOLDING_ID', 'DEBT_SECURITY_REF_INSTRUMENT.HOLDING_ID = FUND_REPORTED_HOLDING.HOLDING_ID', 'CONVERTIBLE_SECURITY_CURRENCY.HOLDING_ID = FUND_REPORTED_HOLDING.HOLDING_ID']}
================================================================================
classification reasoning: The query "Track bond default rates and interest payment issues by credit rating" involves analyzing bond default rates and interest payment issues, which are likely related to the "debt_security" table for default status and interest payment issues. Additionally, credit ratings might be inferred from interest rate risk or credit spread data, which could involve the "interest_rate_risk" or "fund_reported_info" tables.

To achieve this, we would need to:

1. Access the "debt_security" table to check for default status (`debt_security.is_default`) and interest payment issues (`debt_security.are_any_interest_payment`).
2. Possibly join with the "fund_reported_info" or "interest_rate_risk" tables to get credit spread or other related data that might help infer credit ratings.

Given these requirements, the query will likely involve joining multiple tables to correlate bond default and interest payment data with credit-related information. This makes it a "NON-NESTED" query because it requires JOIN operations but does not necessarily need nested queries.

Label: "NON-NESTED"
================================================================================
classification: "NON-NESTED"
================================================================================
process_thesql: ```sql
WITH BondIssues AS (
    SELECT 
        F.ACCESSION_NUMBER,
        DS.IS_DEFAULT,
        DS.ARE_ANY_INTEREST_PAYMENT,
        CASE 
            WHEN CAST(F.CREDIT_SPREAD_3MON_INVEST AS FLOAT) < 1 THEN 'AAA'
            WHEN CAST(F.CREDIT_SPREAD_3MON_INVEST AS FLOAT) < 2 THEN 'AA'
            WHEN CAST(F.CREDIT_SPREAD_3MON_INVEST AS FLOAT) < 3 THEN 'A'
            WHEN CAST(F.CREDIT_SPREAD_3MON_INVEST AS FLOAT) < 4 THEN 'BBB'
            ELSE 'Below BBB'
        END as Credit_Rating
    FROM 
        DEBT_SECURITY DS
        JOIN FUND_REPORTED_HOLDING H ON DS.HOLDING_ID = H.HOLDING_ID
        JOIN FUND_REPORTED_INFO F ON H.ACCESSION_NUMBER = F.ACCESSION_NUMBER
    WHERE 
        DS.IS_DEFAULT IS NOT NULL
        AND DS.ARE_ANY_INTEREST_PAYMENT IS NOT NULL
)
SELECT 
    Credit_Rating,
    COUNT(CASE WHEN IS_DEFAULT = 'Y' THEN 1 END) as Default_Count,
    COUNT(CASE WHEN ARE_ANY_INTEREST
================================================================================
final_output: 
WITH BondIssues AS (
    SELECT 
        F.ACCESSION_NUMBER,
        DS.IS_DEFAULT,
        DS.ARE_ANY_INTEREST_PAYMENT,
        CASE 
            WHEN CAST(F.CREDIT_SPREAD_3MON_INVEST AS FLOAT) < 1 THEN 'AAA'
            WHEN CAST(F.CREDIT_SPREAD_3MON_INVEST AS FLOAT) < 2 THEN 'AA'
            WHEN CAST(F.CREDIT_SPREAD_3MON_INVEST AS FLOAT) < 3 THEN 'A'
            WHEN CAST(F.CREDIT_SPREAD_3MON_INVEST AS FLOAT) < 4 THEN 'BBB'
            ELSE 'Below BBB'
        END as Credit_Rating
    FROM 
        DEBT_SECURITY DS
        JOIN FUND_REPORTED_HOLDING H ON DS.HOLDING_ID = H.HOLDING_ID
        JOIN FUND_REPORTED_INFO F ON H.ACCESSION_NUMBER = F.ACCESSION_NUMBER
    WHERE 
        DS.IS_DEFAULT IS NOT NULL
        AND DS.ARE_ANY_INTEREST_PAYMENT IS NOT NULL
)
SELECT 
    Credit_Rating,
    COUNT(CASE WHEN IS_DEFAULT = 'Y' THEN 1 END) as Default_Count,
    COUNT(CASE WHEN ARE_ANY_INTEREST_PAYMENT = 'Y' THEN 1 END) as Interest_Payment_Issues_Count
FROM 
    BondIssues
GROUP BY 
    Credit_Rating
================================================================================
Result: False
================================================================================
