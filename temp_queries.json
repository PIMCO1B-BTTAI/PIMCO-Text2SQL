{"llm_query": ["List all funds with 'Income' in their name", "Group funds into size categories based on their net assets", "Which funds have the highest liabilities to assets ratio?", "List all registrants with their fund count and total assets", "Show me all funds with 'Growth' in their name", "Show me the funds with over $1 billion in assets", "List the top 10 funds by net assets", "Show me all Fidelity funds", "Which funds have zero liabilities?", "List all registrants with their latest fund's assets", "Show me all funds with 'International' in their name", "Which funds have the most cash on hand?", "List all funds with their submission dates", "Show me the smallest 5 funds by total assets", "Which registrants have multiple phone numbers?", "List all funds with 'Bond' in their name", "Show me all registrants from Florida", "Show me funds with the highest ratio of cash to total assets", "List all funds with 'Index' in their name", "Show me the registrants with the most recent filings", "Which funds have 'ETF' in their name?", "List all registrants with their ZIP codes", "Show me all equity-focused funds", "Which funds have assets over 10 billion?", "List all registrants with their country", "I'm looking for any funds with 'sustainable' or 'ESG' in their name what's their total AUM?", "Could you check which states have the most fund registrants? Top 5 is fine.", "Find out which investment firms manage the most diverse portfolio of fund types?", "I need to check which funds may be too concentrated - find ones where a single holding is more than 10% of their portfolio?", "Compare how our bond funds performed against equity funds in the last month", "Which investment firms seem to be growing the fastest based on their asset growth?", "Any funds that seem to be taking on more risk lately? Look at their borrowing trends.", "Check which investment firms have the most diverse geographic exposure in their holdings", "Find which investment styles are performing best this quarter? Like growth vs value funds?", "Find me funds that might be too exposed to interest rate changes - check their duration risk", "I need to find funds with strong and consistent returns over all three months", "Which funds have the most foreign currency exposure? Interested in emerging markets", "Show me which asset categories had the best returns last month?", "Find me funds that might be taking on too much credit risk - look at their non-investment grade holdings", "Which registrants have the most diverse mix of fund types in their lineup?", "Show me the funds with the highest quality fixed income portfolios", "How have the largest funds performed compared to smaller ones this quarter?", "Looking for funds that might have liquidity issues - check their cash versus short-term obligations", "Which investment companies are most exposed to international markets?", "Help me find funds that might be too concentrated in specific sectors", "Find funds with the highest quality fixed-income holdings", "Which funds are taking on the most interest rate risk?", "Identify funds with high portfolio turnover based on their trading activity?", "See which fund families are most active in securities lending", "Find funds that might be too leveraged through their borrowing activities", "Check for funds with significant counterparty exposure through their derivatives", "Find funds with unusual monthly return patterns - looking for potential outliers", "Show me which funds have the most diverse debt security holdings by maturity", "How has the average fund size changed over the last few quarters?", "What's the quarter-over-quarter change in international exposure?", "Show quarterly trends in credit quality for fixed income funds", "How has average fund leverage changed quarter by quarter?", "Show me quarterly changes in securities lending activity", "What's the quarterly trend in average monthly returns?", "Show the evolution of debt security maturity profiles by quarter", "What's the quarterly pattern of fund cash positions?", "How has the geographic distribution of investments changed quarterly?", "What are the top 5 largest funds by total assets for each quarter?", "How many funds does each investment company manage?", "What percentage of funds in each quarter have total assets over $1 billion?", "Can you flag any funds that have liabilities over half their assets?", "I need to check for concentration risk - show me any holdings that are the biggest position in their funds.", "Which USD funds are most exposed to interest rate changes?", "Find any funds showing losses in their realized gains.", "Check for funds with large outstanding commitments, delayed delivery and standby.", "Give me a breakdown of holdings by fair value level and issuer type looking for valuation risk.", "What's our exposure by state? Need to check geographic concentration.", "Which securities are most actively lent out?", "Find any funds where assets dropped despite positive sales.", "What's the average yield on our defaulted bonds? Need to see recovery potential.", "Give me our largest derivative counterparty exposures - need to check concentration risk.", "Find funds with high liquidation preference relative to their size - might affect wind-down scenarios.", "Let's look at convertible securities with high conversion ratios - could be significant upside.", "Show me funds facing redemption pressure - where outflows exceed inflows consistently.", "How do PIMCO's bond funds compare to their equity funds in terms of growth?", "Which asset categories are driving our best returns this quarter?", "Where are we seeing the biggest month-over-month changes in fund flows?", "What's PIMCO's current duration positioning across their major bond funds?", "How are our largest funds positioned in terms of credit quality?", "Show me our best performing strategies in rising rate environments.", "What's the geographic distribution of our international holdings?", "How diverse are our income sources across the portfolio?", "Give me a complete risk profile of PIMCO's largest funds - looking at duration, credit, and leverage exposure", "How does PIMCO's credit quality distribution compare to industry averages by quarter?", "Track PIMCO's international exposure trends across quarters", "Compare PIMCO's fixed income duration positioning vs competitors", "Analyze PIMCO's cash management strategy vs peers", "Examine PIMCO's securities lending activity and revenue", "Track PIMCO's market share by asset category over time", "Show me the most commonly used CUSIP numbers across all holdings", "What's the average coupon rate for investment-grade vs high-yield bonds?", "Analyze bond maturity distribution across credit ratings", "What percentage of bonds have missed interest payments by sector?", "What's the distribution of bond ratings across different maturities?", "Track changes in high-yield vs investment-grade allocation", "Track bond default rates and interest payment issues by credit rating", "Compare fixed vs floating rate bond distribution across credit qualities", "What's the liquidity profile of funds?", "Which funds have the highest interest rate sensitivity?", "How has fund leverage changed over time?"], "ground_truth_query": ["SELECT \n    SERIES_NAME,\n    TOTAL_ASSETS \nFROM \n    FUND_REPORTED_INFO \nWHERE \n    SERIES_NAME LIKE '%INCOME%';", "WITH FundSizeBuckets AS (\n    SELECT \n        SERIES_NAME,\n        CAST(NET_ASSETS AS FLOAT) as Net_Assets,\n        CASE \n            WHEN CAST(NET_ASSETS AS FLOAT) >= 10000000000 THEN 'Very Large (>10B)'\n            WHEN CAST(NET_ASSETS AS FLOAT) >= 1000000000 THEN 'Large (1B-10B)'\n            WHEN CAST(NET_ASSETS AS FLOAT) >= 100000000 THEN 'Medium (100M-1B)'\n            ELSE 'Small (<100M)'\n        END as Size_Category\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        NET_ASSETS IS NOT NULL\n)\nSELECT \n    Size_Category,\n    COUNT(*) as Number_of_Funds,\n    ROUND(AVG(Net_Assets) / 1000000, 2) as Avg_Net_Assets_Millions,\n    ROUND(MIN(Net_Assets) / 1000000, 2) as Min_Net_Assets_Millions,\n    ROUND(MAX(Net_Assets) / 1000000, 2) as Max_Net_Assets_Millions\nFROM \n    FundSizeBuckets\nGROUP BY \n    Size_Category\nORDER BY \n    MIN(Net_Assets);", "SELECT \n    SERIES_NAME,\n    CAST(TOTAL_LIABILITIES AS FLOAT) / CAST(TOTAL_ASSETS AS FLOAT) as Liability_Ratio\nFROM \n    FUND_REPORTED_INFO\nWHERE \n    TOTAL_ASSETS != '0'\nORDER BY \n    Liability_Ratio DESC\nLIMIT 5;", "SELECT \n    R.REGISTRANT_NAME,\n    COUNT(F.SERIES_NAME) as Fund_Count,\n    SUM(CAST(F.TOTAL_ASSETS AS FLOAT)) as Total_Assets\nFROM \n    REGISTRANT R\n    JOIN FUND_REPORTED_INFO F \n        ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER\nGROUP BY \n    R.REGISTRANT_NAME;", "SELECT \n    SERIES_NAME,\n    TOTAL_ASSETS \nFROM \n    FUND_REPORTED_INFO \nWHERE \n    SERIES_NAME LIKE '%GROWTH%';", "WITH LargeFunds AS (\n    SELECT \n        SERIES_NAME,\n        CAST(TOTAL_ASSETS AS FLOAT) / 1000000 as Assets_Millions\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        TOTAL_ASSETS >= 1000000000\n)\nSELECT * FROM LargeFunds\nORDER BY Assets_Millions DESC\nLIMIT 15;", "SELECT \n    SERIES_NAME,\n    NET_ASSETS \nFROM \n    FUND_REPORTED_INFO \nORDER BY \n    CAST(NET_ASSETS AS FLOAT) DESC \nLIMIT 10;", "SELECT \n    F.SERIES_NAME,\n    F.TOTAL_ASSETS\nFROM \n    FUND_REPORTED_INFO F\n    JOIN REGISTRANT R \n        ON F.ACCESSION_NUMBER = R.ACCESSION_NUMBER\nWHERE \n    R.REGISTRANT_NAME LIKE '%FIDELITY%';", "SELECT \n    SERIES_NAME \nFROM \n    FUND_REPORTED_INFO \nWHERE \n    TOTAL_LIABILITIES = '0' \n    OR TOTAL_LIABILITIES IS NULL;", "SELECT \n    R.REGISTRANT_NAME,\n    F.TOTAL_ASSETS\nFROM \n    REGISTRANT R\n    JOIN FUND_REPORTED_INFO F \n        ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER;", "SELECT \n    SERIES_NAME,\n    TOTAL_ASSETS \nFROM \n    FUND_REPORTED_INFO \nWHERE \n    SERIES_NAME LIKE '%INTERNATIONAL%';", "WITH CashHoldings AS (\n    SELECT \n        SERIES_NAME,\n        ROUND(CAST(CASH_NOT_RPTD_IN_C_OR_D AS FLOAT) / 1000000, 2) as Cash_Millions\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        CASH_NOT_RPTD_IN_C_OR_D IS NOT NULL\n)\nSELECT * FROM CashHoldings\nORDER BY Cash_Millions DESC\nLIMIT 10;", "SELECT \n    F.SERIES_NAME,\n    S.FILING_DATE\nFROM \n    FUND_REPORTED_INFO F\n    JOIN SUBMISSION S \n        ON F.ACCESSION_NUMBER = S.ACCESSION_NUMBER;", "SELECT \n    SERIES_NAME,\n    TOTAL_ASSETS \nFROM \n    FUND_REPORTED_INFO \nWHERE \n    TOTAL_ASSETS IS NOT NULL\nORDER BY \n    CAST(TOTAL_ASSETS AS FLOAT) ASC \nLIMIT 5;", "SELECT \n    REGISTRANT_NAME,\n    COUNT(DISTINCT PHONE) as Phone_Count\nFROM \n    REGISTRANT\nGROUP BY \n    REGISTRANT_NAME\nHAVING \n    Phone_Count > 1;", "SELECT \n    SERIES_NAME,\n    TOTAL_ASSETS \nFROM \n    FUND_REPORTED_INFO \nWHERE \n    SERIES_NAME LIKE '%BOND%';", "SELECT \n    REGISTRANT_NAME,\n    CITY,\n    ADDRESS1 \nFROM \n    REGISTRANT \nWHERE \n    STATE = 'FL';", "SELECT \n    SERIES_NAME,\n    ROUND(CAST(CASH_NOT_RPTD_IN_C_OR_D AS FLOAT) * 100.0 / \n          CAST(TOTAL_ASSETS AS FLOAT), 2) as Cash_Percentage\nFROM \n    FUND_REPORTED_INFO\nWHERE \n    CASH_NOT_RPTD_IN_C_OR_D IS NOT NULL \n    AND TOTAL_ASSETS > 0\nORDER BY \n    Cash_Percentage DESC\nLIMIT 15;", "SELECT \n    SERIES_NAME,\n    TOTAL_ASSETS \nFROM \n    FUND_REPORTED_INFO \nWHERE \n    SERIES_NAME LIKE '%INDEX%';", "SELECT \n    R.REGISTRANT_NAME,\n    MAX(S.FILING_DATE) as Latest_Filing\nFROM \n    REGISTRANT R\n    JOIN SUBMISSION S \n        ON R.ACCESSION_NUMBER = S.ACCESSION_NUMBER\nGROUP BY \n    R.REGISTRANT_NAME\nORDER BY \n    Latest_Filing DESC\nLIMIT 5;", "SELECT \n    SERIES_NAME,\n    TOTAL_ASSETS \nFROM \n    FUND_REPORTED_INFO \nWHERE \n    SERIES_NAME LIKE '%ETF%';", "SELECT \n    REGISTRANT_NAME,\n    ZIP,\n    STATE \nFROM \n    REGISTRANT \nORDER BY \n    ZIP;", "SELECT \n    SERIES_NAME,\n    ROUND(CAST(TOTAL_ASSETS AS FLOAT) / 1000000, 2) as Assets_Millions\nFROM \n    FUND_REPORTED_INFO\nWHERE \n    SERIES_NAME LIKE '%EQUITY%'\n    OR SERIES_NAME LIKE '%STOCK%'\nORDER BY \n    Assets_Millions DESC\nLIMIT 20;", "SELECT \n    SERIES_NAME,\n    TOTAL_ASSETS \nFROM \n    FUND_REPORTED_INFO \nWHERE \n    CAST(TOTAL_ASSETS AS FLOAT) > 10000000000;", "SELECT \n    REGISTRANT_NAME,\n    COUNTRY,\n    STATE \nFROM \n    REGISTRANT \nORDER BY \n    COUNTRY,\n    STATE;", "WITH ESGFunds AS (\n    SELECT \n        SERIES_NAME,\n        TOTAL_ASSETS\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        SERIES_NAME LIKE '%SUSTAINABLE%'\n        OR SERIES_NAME LIKE '%ESG%'\n)\nSELECT \n    COUNT(*) as Number_of_ESG_Funds,\n    SUM(CAST(TOTAL_ASSETS AS FLOAT)) as Total_ESG_Assets\nFROM \n    ESGFunds;", "WITH StateRegistrants AS (\n    SELECT \n        STATE,\n        COUNT(DISTINCT REGISTRANT_NAME) as Registrant_Count,\n        COUNT(DISTINCT F.SERIES_NAME) as Fund_Count\n    FROM \n        REGISTRANT R\n        LEFT JOIN FUND_REPORTED_INFO F \n            ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n    WHERE \n        STATE IS NOT NULL\n    GROUP BY \n        STATE\n)\nSELECT \n    STATE,\n    Registrant_Count,\n    Fund_Count\nFROM \n    StateRegistrants\nORDER BY \n    Registrant_Count DESC\nLIMIT 5;", "WITH FundTypes AS (\n    SELECT \n        R.REGISTRANT_NAME,\n        COUNT(DISTINCT \n            CASE \n                WHEN F.SERIES_NAME LIKE '%BOND%' THEN 'BOND'\n                WHEN F.SERIES_NAME LIKE '%EQUITY%' THEN 'EQUITY'\n                WHEN F.SERIES_NAME LIKE '%MONEY MARKET%' THEN 'MONEY MARKET'\n                WHEN F.SERIES_NAME LIKE '%INDEX%' THEN 'INDEX'\n                WHEN F.SERIES_NAME LIKE '%ETF%' THEN 'ETF'\n                ELSE 'OTHER'\n            END\n        ) as Fund_Type_Count\n    FROM \n        REGISTRANT R\n        JOIN FUND_REPORTED_INFO F \n            ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n    GROUP BY \n        R.REGISTRANT_NAME\n)\nSELECT \n    REGISTRANT_NAME,\n    Fund_Type_Count\nFROM \n    FundTypes\nWHERE \n    Fund_Type_Count > 2\nORDER BY \n    Fund_Type_Count DESC\nLIMIT 10;", "WITH HoldingConcentration AS (\n    SELECT \n        F.SERIES_NAME,\n        H.ISSUER_NAME,\n        H.PERCENTAGE,\n        F.TOTAL_ASSETS\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN FUND_REPORTED_HOLDING H \n            ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n    WHERE \n        CAST(H.PERCENTAGE AS FLOAT) > 10.0\n)\nSELECT \n    SERIES_NAME,\n    ISSUER_NAME,\n    PERCENTAGE,\n    TOTAL_ASSETS\nFROM \n    HoldingConcentration\nORDER BY \n    CAST(PERCENTAGE AS FLOAT) DESC;", "WITH FundReturns AS (\n    SELECT \n        F.SERIES_NAME,\n        CASE \n            WHEN F.SERIES_NAME LIKE '%BOND%' THEN 'Bond'\n            WHEN F.SERIES_NAME LIKE '%EQUITY%' THEN 'Equity'\n        END as Fund_Type,\n        M.MONTHLY_TOTAL_RETURN1\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN MONTHLY_TOTAL_RETURN M \n            ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n    WHERE \n        F.SERIES_NAME LIKE '%BOND%'\n        OR F.SERIES_NAME LIKE '%EQUITY%'\n)\nSELECT \n    Fund_Type,\n    AVG(CAST(MONTHLY_TOTAL_RETURN1 AS FLOAT)) as Avg_Return,\n    COUNT(*) as Fund_Count\nFROM \n    FundReturns\nGROUP BY \n    Fund_Type;", "WITH AssetGrowth AS (\n    SELECT \n        R.REGISTRANT_NAME,\n        SUM(CAST(F.TOTAL_ASSETS AS FLOAT)) as Current_Assets,\n        LAG(SUM(CAST(F.TOTAL_ASSETS AS FLOAT))) OVER (\n            PARTITION BY R.REGISTRANT_NAME \n            ORDER BY S.FILING_DATE\n        ) as Previous_Assets,\n        S.FILING_DATE\n    FROM \n        REGISTRANT R\n        JOIN FUND_REPORTED_INFO F \n            ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n        JOIN SUBMISSION S \n            ON F.ACCESSION_NUMBER = S.ACCESSION_NUMBER\n    GROUP BY \n        R.REGISTRANT_NAME,\n        S.FILING_DATE\n)\nSELECT \n    REGISTRANT_NAME,\n    ((Current_Assets - Previous_Assets) / Previous_Assets * 100) as Growth_Percentage\nFROM \n    AssetGrowth\nWHERE \n    Previous_Assets IS NOT NULL\n    AND Previous_Assets > 0\nORDER BY \n    Growth_Percentage DESC\nLIMIT 10;", "WITH BorrowingTrends AS (\n    SELECT \n        F.SERIES_NAME,\n        F.TOTAL_ASSETS,\n        F.BORROWING_PAY_WITHIN_1YR,\n        F.BORROWING_PAY_AFTER_1YR,\n        CAST(F.BORROWING_PAY_WITHIN_1YR AS FLOAT) / NULLIF(CAST(F.TOTAL_ASSETS AS FLOAT), 0) * 100 as Short_Term_Borrow_Ratio,\n        CAST(F.BORROWING_PAY_AFTER_1YR AS FLOAT) / NULLIF(CAST(F.TOTAL_ASSETS AS FLOAT), 0) * 100 as Long_Term_Borrow_Ratio\n    FROM \n        FUND_REPORTED_INFO F\n)\nSELECT \n    SERIES_NAME,\n    Short_Term_Borrow_Ratio,\n    Long_Term_Borrow_Ratio,\n    Short_Term_Borrow_Ratio + Long_Term_Borrow_Ratio as Total_Borrow_Ratio\nFROM \n    BorrowingTrends\nWHERE \n    Short_Term_Borrow_Ratio + Long_Term_Borrow_Ratio > 10\nORDER BY \n    Total_Borrow_Ratio DESC;", "WITH GeographicDiversity AS (\n    SELECT \n        R.REGISTRANT_NAME,\n        COUNT(DISTINCT H.INVESTMENT_COUNTRY) as Country_Count,\n        COUNT(DISTINCT H.HOLDING_ID) as Total_Holdings\n    FROM \n        REGISTRANT R\n        JOIN FUND_REPORTED_INFO F \n            ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n        JOIN FUND_REPORTED_HOLDING H \n            ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n    WHERE \n        H.INVESTMENT_COUNTRY IS NOT NULL\n    GROUP BY \n        R.REGISTRANT_NAME\n)\nSELECT \n    REGISTRANT_NAME,\n    Country_Count,\n    Total_Holdings,\n    ROUND(CAST(Country_Count AS FLOAT) / CAST(Total_Holdings AS FLOAT) * 100, 2) as Diversity_Score\nFROM \n    GeographicDiversity\nWHERE \n    Total_Holdings > 10\nORDER BY \n    Country_Count DESC\nLIMIT 10;", "WITH StylePerformance AS (\n    SELECT \n        CASE \n            WHEN F.SERIES_NAME LIKE '%GROWTH%' THEN 'Growth'\n            WHEN F.SERIES_NAME LIKE '%VALUE%' THEN 'Value'\n            WHEN F.SERIES_NAME LIKE '%BLEND%' THEN 'Blend'\n            ELSE 'Other'\n        END as Investment_Style,\n        AVG(CAST(M.MONTHLY_TOTAL_RETURN1 AS FLOAT)) as Avg_Monthly_Return,\n        COUNT(*) as Fund_Count\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN MONTHLY_TOTAL_RETURN M \n            ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n    GROUP BY \n        CASE \n            WHEN F.SERIES_NAME LIKE '%GROWTH%' THEN 'Growth'\n            WHEN F.SERIES_NAME LIKE '%VALUE%' THEN 'Value'\n            WHEN F.SERIES_NAME LIKE '%BLEND%' THEN 'Blend'\n            ELSE 'Other'\n        END\n)\nSELECT \n    Investment_Style,\n    Avg_Monthly_Return,\n    Fund_Count\nFROM \n    StylePerformance\nWHERE \n    Investment_Style != 'Other'\nORDER BY \n    Avg_Monthly_Return DESC;", "WITH InterestRateExposure AS (\n    SELECT \n        F.SERIES_NAME,\n        IR.INTRST_RATE_CHANGE_10YR_DV01,\n        IR.INTRST_RATE_CHANGE_30YR_DV01,\n        F.TOTAL_ASSETS\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN INTEREST_RATE_RISK IR \n            ON F.ACCESSION_NUMBER = IR.ACCESSION_NUMBER\n    WHERE \n        IR.INTRST_RATE_CHANGE_10YR_DV01 IS NOT NULL\n)\nSELECT \n    SERIES_NAME,\n    CAST(INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT) as Ten_Year_Risk,\n    CAST(INTRST_RATE_CHANGE_30YR_DV01 AS FLOAT) as Thirty_Year_Risk\nFROM \n    InterestRateExposure\nWHERE \n    CAST(INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT) > 1.0\n    OR CAST(INTRST_RATE_CHANGE_30YR_DV01 AS FLOAT) > 1.0\nORDER BY \n    Ten_Year_Risk DESC;", "WITH ConsistentPerformers AS (\n    SELECT \n        F.SERIES_NAME,\n        M.MONTHLY_TOTAL_RETURN1,\n        M.MONTHLY_TOTAL_RETURN2,\n        M.MONTHLY_TOTAL_RETURN3,\n        (CAST(M.MONTHLY_TOTAL_RETURN1 AS FLOAT) + \n         CAST(M.MONTHLY_TOTAL_RETURN2 AS FLOAT) + \n         CAST(M.MONTHLY_TOTAL_RETURN3 AS FLOAT)) / 3 as Avg_Return\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN MONTHLY_TOTAL_RETURN M \n            ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n    WHERE \n        M.MONTHLY_TOTAL_RETURN1 IS NOT NULL\n        AND M.MONTHLY_TOTAL_RETURN2 IS NOT NULL\n        AND M.MONTHLY_TOTAL_RETURN3 IS NOT NULL\n)\nSELECT \n    SERIES_NAME,\n    MONTHLY_TOTAL_RETURN1,\n    MONTHLY_TOTAL_RETURN2,\n    MONTHLY_TOTAL_RETURN3,\n    Avg_Return\nFROM \n    ConsistentPerformers\nWHERE \n    CAST(MONTHLY_TOTAL_RETURN1 AS FLOAT) > 0\n    AND CAST(MONTHLY_TOTAL_RETURN2 AS FLOAT) > 0\n    AND CAST(MONTHLY_TOTAL_RETURN3 AS FLOAT) > 0\nORDER BY \n    Avg_Return DESC\nLIMIT 10;", "WITH CurrencyExposure AS (\n    SELECT \n        F.SERIES_NAME,\n        COUNT(DISTINCT H.CURRENCY_CODE) as Currency_Count,\n        SUM(CASE \n            WHEN H.CURRENCY_CODE NOT IN ('USD', 'EUR', 'GBP', 'JPY', 'CHF') \n            THEN CAST(H.CURRENCY_VALUE AS FLOAT) \n            ELSE 0 \n        END) as Emerging_Market_Exposure\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN FUND_REPORTED_HOLDING H \n            ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n    WHERE \n        H.CURRENCY_CODE IS NOT NULL\n    GROUP BY \n        F.SERIES_NAME\n)\nSELECT \n    SERIES_NAME,\n    Currency_Count,\n    Emerging_Market_Exposure\nFROM \n    CurrencyExposure\nWHERE \n    Currency_Count > 3\nORDER BY \n    Emerging_Market_Exposure DESC\nLIMIT 15;", "WITH CategoryReturns AS (\n    SELECT \n        H.ASSET_CAT,\n        AVG(CAST(M.MONTHLY_TOTAL_RETURN1 AS FLOAT)) as Avg_Return,\n        COUNT(DISTINCT F.SERIES_NAME) as Fund_Count\n    FROM \n        FUND_REPORTED_HOLDING H\n        JOIN FUND_REPORTED_INFO F \n            ON H.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n        JOIN MONTHLY_TOTAL_RETURN M \n            ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n    WHERE \n        H.ASSET_CAT IS NOT NULL\n    GROUP BY \n        H.ASSET_CAT\n)\nSELECT \n    ASSET_CAT,\n    Avg_Return,\n    Fund_Count\nFROM \n    CategoryReturns\nWHERE \n    Fund_Count > 5\nORDER BY \n    Avg_Return DESC;", "WITH CreditRiskExposure AS (\n    SELECT \n        F.SERIES_NAME,\n        SUM(CAST(F.CREDIT_SPREAD_10YR_NONINVEST AS FLOAT)) as NonInvest_Exposure,\n        SUM(CAST(F.CREDIT_SPREAD_10YR_INVEST AS FLOAT)) as Invest_Exposure,\n        F.TOTAL_ASSETS\n    FROM \n        FUND_REPORTED_INFO F\n    WHERE \n        F.CREDIT_SPREAD_10YR_NONINVEST IS NOT NULL\n    GROUP BY \n        F.SERIES_NAME,\n        F.TOTAL_ASSETS\n)\nSELECT \n    SERIES_NAME,\n    NonInvest_Exposure / NULLIF(CAST(TOTAL_ASSETS AS FLOAT), 0) * 100 as NonInvest_Percentage\nFROM \n    CreditRiskExposure\nWHERE \n    NonInvest_Exposure > Invest_Exposure\nORDER BY \n    NonInvest_Percentage DESC;", "WITH FundTypes AS (\n    SELECT \n        R.REGISTRANT_NAME,\n        COUNT(DISTINCT \n            CASE \n                WHEN F.SERIES_NAME LIKE '%BOND%' THEN 'BOND'\n                WHEN F.SERIES_NAME LIKE '%EQUITY%' THEN 'EQUITY'\n                WHEN F.SERIES_NAME LIKE '%ETF%' THEN 'ETF'\n                WHEN F.SERIES_NAME LIKE '%INDEX%' THEN 'INDEX'\n                WHEN F.SERIES_NAME LIKE '%MONEY MARKET%' THEN 'MONEY MARKET'\n                WHEN F.SERIES_NAME LIKE '%BALANCED%' THEN 'BALANCED'\n                ELSE 'OTHER'\n            END\n        ) as Fund_Type_Count,\n        COUNT(*) as Total_Funds\n    FROM \n        REGISTRANT R\n        JOIN FUND_REPORTED_INFO F \n            ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n    GROUP BY \n        R.REGISTRANT_NAME\n)\nSELECT \n    REGISTRANT_NAME,\n    Fund_Type_Count,\n    Total_Funds,\n    (Fund_Type_Count * 100.0 / Total_Funds) as Diversity_Score\nFROM \n    FundTypes\nWHERE \n    Total_Funds >= 5\nORDER BY \n    Fund_Type_Count DESC, Total_Funds DESC;", "WITH BondQuality AS (\n    SELECT \n        F.SERIES_NAME,\n        F.TOTAL_ASSETS,\n        F.CREDIT_SPREAD_10YR_INVEST,\n        F.CREDIT_SPREAD_10YR_NONINVEST,\n        CAST(F.CREDIT_SPREAD_10YR_INVEST AS FLOAT) / \n        NULLIF(CAST(F.CREDIT_SPREAD_10YR_INVEST AS FLOAT) + \n               CAST(F.CREDIT_SPREAD_10YR_NONINVEST AS FLOAT), 0) * 100 as Investment_Grade_Ratio\n    FROM \n        FUND_REPORTED_INFO F\n    WHERE \n        F.SERIES_NAME LIKE '%BOND%'\n        OR F.SERIES_NAME LIKE '%FIXED INCOME%'\n)\nSELECT \n    SERIES_NAME,\n    Investment_Grade_Ratio,\n    TOTAL_ASSETS\nFROM \n    BondQuality\nWHERE \n    Investment_Grade_Ratio > 80\nORDER BY \n    Investment_Grade_Ratio DESC\nLIMIT 15;", "WITH FundSizePerformance AS (\n    SELECT \n        F.SERIES_NAME,\n        CAST(F.TOTAL_ASSETS AS FLOAT) as Assets,\n        CAST(M.MONTHLY_TOTAL_RETURN1 AS FLOAT) as Latest_Return,\n        NTILE(4) OVER (ORDER BY CAST(F.TOTAL_ASSETS AS FLOAT)) as Size_Quartile\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN MONTHLY_TOTAL_RETURN M \n            ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n    WHERE \n        F.TOTAL_ASSETS IS NOT NULL\n        AND M.MONTHLY_TOTAL_RETURN1 IS NOT NULL\n)\nSELECT \n    Size_Quartile,\n    AVG(Latest_Return) as Avg_Return,\n    COUNT(*) as Fund_Count,\n    AVG(Assets) as Avg_Assets\nFROM \n    FundSizePerformance\nGROUP BY \n    Size_Quartile\nORDER BY \n    Size_Quartile;", "WITH LiquidityAnalysis AS (\n    SELECT \n        F.SERIES_NAME,\n        CAST(F.CASH_NOT_RPTD_IN_C_OR_D AS FLOAT) as Cash,\n        CAST(F.BORROWING_PAY_WITHIN_1YR AS FLOAT) as Short_Term_Obligations,\n        CAST(F.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO F\n    WHERE \n        F.CASH_NOT_RPTD_IN_C_OR_D IS NOT NULL\n)\nSELECT \n    SERIES_NAME,\n    Cash / NULLIF(Short_Term_Obligations, 0) as Cash_Coverage_Ratio,\n    Cash / Total_Assets * 100 as Cash_Percentage\nFROM \n    LiquidityAnalysis\nWHERE \n    Short_Term_Obligations > 0\nORDER BY \n    Cash_Coverage_Ratio ASC\nLIMIT 15;", "WITH InternationalExposure AS (\n    SELECT \n        R.REGISTRANT_NAME,\n        COUNT(CASE WHEN H.INVESTMENT_COUNTRY != 'US' THEN 1 END) as International_Holdings,\n        COUNT(*) as Total_Holdings,\n        SUM(CASE WHEN H.INVESTMENT_COUNTRY != 'US' \n            THEN CAST(H.CURRENCY_VALUE AS FLOAT) ELSE 0 END) as International_Value\n    FROM \n        REGISTRANT R\n        JOIN FUND_REPORTED_INFO F \n            ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n        JOIN FUND_REPORTED_HOLDING H \n            ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n    GROUP BY \n        R.REGISTRANT_NAME\n)\nSELECT \n    REGISTRANT_NAME,\n    International_Holdings * 100.0 / NULLIF(Total_Holdings, 0) as International_Percentage,\n    International_Value\nFROM \n    InternationalExposure\nWHERE \n    Total_Holdings > 10\nORDER BY \n    International_Percentage DESC\nLIMIT 10;", "WITH SectorConcentration AS (\n    SELECT \n        F.SERIES_NAME,\n        H.ASSET_CAT,\n        COUNT(*) as Holdings_Count,\n        SUM(CAST(H.CURRENCY_VALUE AS FLOAT)) as Sector_Value,\n        CAST(F.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN FUND_REPORTED_HOLDING H \n            ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n    WHERE \n        H.ASSET_CAT IS NOT NULL\n    GROUP BY \n        F.SERIES_NAME,\n        H.ASSET_CAT,\n        F.TOTAL_ASSETS\n)\nSELECT \n    SERIES_NAME,\n    ASSET_CAT,\n    (Sector_Value / Total_Assets * 100) as Sector_Percentage\nFROM \n    SectorConcentration\nWHERE \n    (Sector_Value / Total_Assets * 100) > 30\nORDER BY \n    Sector_Percentage DESC;", "WITH FixedIncomeQuality AS (\n    SELECT \n        F.SERIES_NAME,\n        SUM(CAST(F.CREDIT_SPREAD_10YR_INVEST AS FLOAT)) as Investment_Grade_Exposure,\n        SUM(CAST(F.CREDIT_SPREAD_10YR_NONINVEST AS FLOAT)) as NonInvestment_Grade_Exposure,\n        CAST(F.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO F\n    WHERE \n        F.SERIES_NAME LIKE '%BOND%'\n        OR F.SERIES_NAME LIKE '%FIXED INCOME%'\n    GROUP BY \n        F.SERIES_NAME,\n        F.TOTAL_ASSETS\n)\nSELECT \n    SERIES_NAME,\n    (Investment_Grade_Exposure / NULLIF(Investment_Grade_Exposure + NonInvestment_Grade_Exposure, 0) * 100) as Quality_Score\nFROM \n    FixedIncomeQuality\nWHERE \n    Investment_Grade_Exposure + NonInvestment_Grade_Exposure > 0\nORDER BY \n    Quality_Score DESC\nLIMIT 15;", "WITH InterestRateRisk AS (\n    SELECT \n        F.SERIES_NAME,\n        IR.INTRST_RATE_CHANGE_10YR_DV01,\n        IR.INTRST_RATE_CHANGE_30YR_DV01,\n        F.TOTAL_ASSETS\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN INTEREST_RATE_RISK IR \n            ON F.ACCESSION_NUMBER = IR.ACCESSION_NUMBER\n    WHERE \n        IR.INTRST_RATE_CHANGE_10YR_DV01 IS NOT NULL\n        OR IR.INTRST_RATE_CHANGE_30YR_DV01 IS NOT NULL\n)\nSELECT \n    SERIES_NAME,\n    CAST(INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT) as Ten_Year_Risk,\n    CAST(INTRST_RATE_CHANGE_30YR_DV01 AS FLOAT) as Thirty_Year_Risk,\n    CAST(INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT) + CAST(INTRST_RATE_CHANGE_30YR_DV01 AS FLOAT) as Total_Risk\nFROM \n    InterestRateRisk\nORDER BY \n    Total_Risk DESC\nLIMIT 10;", "WITH TradingActivity AS (\n    SELECT \n        F.SERIES_NAME,\n        SUM(CAST(F.SALES_FLOW_MON1 AS FLOAT) + \n            CAST(F.SALES_FLOW_MON2 AS FLOAT) + \n            CAST(F.SALES_FLOW_MON3 AS FLOAT)) as Total_Sales,\n        CAST(F.TOTAL_ASSETS AS FLOAT) as Assets\n    FROM \n        FUND_REPORTED_INFO F\n    WHERE \n        F.SALES_FLOW_MON1 IS NOT NULL \n        AND F.SALES_FLOW_MON2 IS NOT NULL \n        AND F.SALES_FLOW_MON3 IS NOT NULL\n    GROUP BY \n        F.SERIES_NAME,\n        F.TOTAL_ASSETS\n)\nSELECT \n    SERIES_NAME,\n    (Total_Sales / NULLIF(Assets, 0)) * 100 as Turnover_Rate\nFROM \n    TradingActivity\nWHERE \n    Assets > 0\nORDER BY \n    Turnover_Rate DESC\nLIMIT 15;", "WITH LendingActivity AS (\n    SELECT \n        R.REGISTRANT_NAME,\n        COUNT(DISTINCT F.SERIES_NAME) as Total_Funds,\n        COUNT(DISTINCT CASE \n            WHEN SL.IS_LOAN_BY_FUND = 'Y' \n            THEN F.SERIES_NAME \n        END) as Lending_Funds\n    FROM \n        REGISTRANT R\n        JOIN FUND_REPORTED_INFO F \n            ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n        LEFT JOIN SECURITIES_LENDING SL \n            ON F.ACCESSION_NUMBER = SL.HOLDING_ID\n    GROUP BY \n        R.REGISTRANT_NAME\n)\nSELECT \n    REGISTRANT_NAME,\n    Lending_Funds,\n    Total_Funds,\n    (Lending_Funds * 100.0 / Total_Funds) as Lending_Percentage\nFROM \n    LendingActivity\nWHERE \n    Total_Funds >= 5\nORDER BY \n    Lending_Percentage DESC\nLIMIT 15;", "WITH LeverageAnalysis AS (\n    SELECT \n        F.SERIES_NAME,\n        CAST(F.BORROWING_PAY_WITHIN_1YR AS FLOAT) +\n        CAST(F.BORROWING_PAY_AFTER_1YR AS FLOAT) as Total_Borrowing,\n        CAST(F.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO F\n    WHERE \n        F.BORROWING_PAY_WITHIN_1YR IS NOT NULL\n        AND F.BORROWING_PAY_AFTER_1YR IS NOT NULL\n)\nSELECT \n    SERIES_NAME,\n    (Total_Borrowing / NULLIF(Total_Assets, 0) * 100) as Leverage_Ratio\nFROM \n    LeverageAnalysis\nWHERE \n    Total_Assets > 0\nORDER BY \n    Leverage_Ratio DESC\nLIMIT 10;", "WITH CounterpartyRisk AS (\n    SELECT \n        F.SERIES_NAME,\n        DC.DERIVATIVE_COUNTERPARTY_NAME,\n        COUNT(*) as Transaction_Count,\n        COUNT(DISTINCT DC.HOLDING_ID) as Unique_Positions\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN FUND_REPORTED_HOLDING H \n            ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n        JOIN DERIVATIVE_COUNTERPARTY DC \n            ON H.HOLDING_ID = DC.HOLDING_ID\n    GROUP BY \n        F.SERIES_NAME,\n        DC.DERIVATIVE_COUNTERPARTY_NAME\n)\nSELECT \n    SERIES_NAME,\n    DERIVATIVE_COUNTERPARTY_NAME,\n    Transaction_Count,\n    Unique_Positions\nFROM \n    CounterpartyRisk\nORDER BY \n    Transaction_Count DESC\nLIMIT 15;", "WITH ReturnPatterns AS (\n    SELECT \n        F.SERIES_NAME,\n        CAST(M.MONTHLY_TOTAL_RETURN1 AS FLOAT) as Return1,\n        CAST(M.MONTHLY_TOTAL_RETURN2 AS FLOAT) as Return2,\n        CAST(M.MONTHLY_TOTAL_RETURN3 AS FLOAT) as Return3,\n        ABS(CAST(M.MONTHLY_TOTAL_RETURN1 AS FLOAT) - \n            (CAST(M.MONTHLY_TOTAL_RETURN2 AS FLOAT) + \n             CAST(M.MONTHLY_TOTAL_RETURN3 AS FLOAT)) / 2) as Return_Deviation\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN MONTHLY_TOTAL_RETURN M \n            ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n    WHERE \n        M.MONTHLY_TOTAL_RETURN1 IS NOT NULL\n        AND M.MONTHLY_TOTAL_RETURN2 IS NOT NULL\n        AND M.MONTHLY_TOTAL_RETURN3 IS NOT NULL\n)\nSELECT \n    SERIES_NAME,\n    Return1,\n    Return2,\n    Return3,\n    Return_Deviation\nFROM \n    ReturnPatterns\nWHERE \n    Return_Deviation > 5\nORDER BY \n    Return_Deviation DESC;", "WITH MaturityDiversity AS (\n    SELECT \n        F.SERIES_NAME,\n        COUNT(DISTINCT \n            CASE \n                WHEN DS.MATURITY_DATE <= DATE('now', '+1 year') THEN 'SHORT_TERM'\n                WHEN DS.MATURITY_DATE <= DATE('now', '+5 year') THEN 'MEDIUM_TERM'\n                ELSE 'LONG_TERM'\n            END\n        ) as Maturity_Types,\n        COUNT(*) as Total_Debt_Securities\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN FUND_REPORTED_HOLDING H \n            ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n        JOIN DEBT_SECURITY DS \n            ON H.HOLDING_ID = DS.HOLDING_ID\n    WHERE \n        DS.MATURITY_DATE IS NOT NULL\n    GROUP BY \n        F.SERIES_NAME\n)\nSELECT \n    SERIES_NAME,\n    Maturity_Types,\n    Total_Debt_Securities,\n    (Maturity_Types * 100.0 / 3) as Diversity_Score\nFROM \n    MaturityDiversity\nWHERE \n    Total_Debt_Securities >= 5\nORDER BY \n    Maturity_Types DESC, \n    Total_Debt_Securities DESC;", "WITH QuarterlySizes AS (\n    SELECT \n        QUARTER,\n        COUNT(DISTINCT SERIES_NAME) as Number_of_Funds,\n        AVG(CAST(TOTAL_ASSETS AS FLOAT)) as Average_Fund_Size,\n        SUM(CAST(TOTAL_ASSETS AS FLOAT)) as Total_Industry_Assets\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        TOTAL_ASSETS IS NOT NULL\n    GROUP BY \n        QUARTER\n)\nSELECT * FROM QuarterlySizes\nORDER BY \n    QUARTER DESC;", "WITH InternationalExposure AS (\n    SELECT \n        QUARTER,\n        COUNT(CASE WHEN INVESTMENT_COUNTRY != 'US' THEN 1 END) as International_Holdings,\n        COUNT(*) as Total_Holdings\n    FROM \n        FUND_REPORTED_HOLDING\n    GROUP BY \n        QUARTER\n)\nSELECT \n    QUARTER,\n    International_Holdings,\n    Total_Holdings,\n    (International_Holdings * 100.0 / Total_Holdings) as International_Percentage\nFROM \n    InternationalExposure\nORDER BY \n    QUARTER DESC;", "WITH CreditQuality AS (\n    SELECT \n        QUARTER,\n        CAST(CREDIT_SPREAD_10YR_INVEST AS FLOAT) as Investment_Grade,\n        CAST(CREDIT_SPREAD_10YR_NONINVEST AS FLOAT) as NonInvestment_Grade\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        CREDIT_SPREAD_10YR_INVEST IS NOT NULL \n        OR CREDIT_SPREAD_10YR_NONINVEST IS NOT NULL\n)\nSELECT \n    QUARTER,\n    AVG(Investment_Grade) as Avg_Investment_Grade_Spread,\n    AVG(NonInvestment_Grade) as Avg_NonInvestment_Grade_Spread\nFROM \n    CreditQuality\nGROUP BY \n    QUARTER\nORDER BY \n    QUARTER DESC;", "WITH LeverageMetrics AS (\n    SELECT \n        QUARTER,\n        SERIES_NAME,\n        CAST(BORROWING_PAY_WITHIN_1YR AS FLOAT) + \n        CAST(BORROWING_PAY_AFTER_1YR AS FLOAT) as Total_Borrowing\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        BORROWING_PAY_WITHIN_1YR IS NOT NULL \n        OR BORROWING_PAY_AFTER_1YR IS NOT NULL\n)\nSELECT \n    QUARTER,\n    AVG(Total_Borrowing) as Avg_Total_Borrowing,\n    COUNT(DISTINCT SERIES_NAME) as Number_of_Funds_With_Borrowing\nFROM \n    LeverageMetrics\nGROUP BY \n    QUARTER\nORDER BY \n    QUARTER DESC;", "WITH LendingActivity AS (\n    SELECT \n        sl.QUARTER,\n        f.SERIES_NAME,\n        sl.IS_LOAN_BY_FUND\n    FROM \n        FUND_REPORTED_INFO f\n        LEFT JOIN SECURITIES_LENDING sl ON f.ACCESSION_NUMBER = sl.HOLDING_ID\n)\nSELECT \n    QUARTER,\n    COUNT(DISTINCT CASE WHEN IS_LOAN_BY_FUND = 'Y' THEN SERIES_NAME END) as Lending_Funds,\n    COUNT(DISTINCT SERIES_NAME) as Total_Funds,\n    (COUNT(DISTINCT CASE WHEN IS_LOAN_BY_FUND = 'Y' THEN SERIES_NAME END) * 100.0 / \n     COUNT(DISTINCT SERIES_NAME)) as Lending_Percentage\nFROM \n    LendingActivity\nGROUP BY \n    QUARTER\nORDER BY \n    QUARTER DESC;", "WITH MonthlyReturns AS (\n    SELECT \n        QUARTER,\n        CAST(MONTHLY_TOTAL_RETURN1 AS FLOAT) as Return1,\n        CAST(MONTHLY_TOTAL_RETURN2 AS FLOAT) as Return2,\n        CAST(MONTHLY_TOTAL_RETURN3 AS FLOAT) as Return3\n    FROM \n        MONTHLY_TOTAL_RETURN\n    WHERE \n        MONTHLY_TOTAL_RETURN1 IS NOT NULL\n        AND MONTHLY_TOTAL_RETURN2 IS NOT NULL\n        AND MONTHLY_TOTAL_RETURN3 IS NOT NULL\n)\nSELECT \n    QUARTER,\n    AVG(Return1) as Avg_Month1_Return,\n    AVG(Return2) as Avg_Month2_Return,\n    AVG(Return3) as Avg_Month3_Return\nFROM \n    MonthlyReturns\nGROUP BY \n    QUARTER\nORDER BY \n    QUARTER DESC;", "WITH MaturityProfiles AS (\n    SELECT \n        QUARTER,\n        MATURITY_DATE,\n        CASE \n            WHEN MATURITY_DATE <= DATE('now', '+1 year') THEN 'Short_Term'\n            WHEN MATURITY_DATE <= DATE('now', '+5 year') THEN 'Medium_Term'\n            ELSE 'Long_Term'\n        END as Maturity_Type\n    FROM \n        DEBT_SECURITY\n    WHERE \n        MATURITY_DATE IS NOT NULL\n)\nSELECT \n    QUARTER,\n    COUNT(CASE WHEN Maturity_Type = 'Short_Term' THEN 1 END) as Short_Term,\n    COUNT(CASE WHEN Maturity_Type = 'Medium_Term' THEN 1 END) as Medium_Term,\n    COUNT(CASE WHEN Maturity_Type = 'Long_Term' THEN 1 END) as Long_Term\nFROM \n    MaturityProfiles\nGROUP BY \n    QUARTER\nORDER BY \n    QUARTER DESC;", "WITH CashPositions AS (\n    SELECT \n        QUARTER,\n        CAST(CASH_NOT_RPTD_IN_C_OR_D AS FLOAT) as Cash_Position\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        CASH_NOT_RPTD_IN_C_OR_D IS NOT NULL\n)\nSELECT \n    QUARTER,\n    AVG(Cash_Position) as Avg_Cash_Position,\n    MAX(Cash_Position) as Max_Cash_Position,\n    MIN(Cash_Position) as Min_Cash_Position\nFROM \n    CashPositions\nGROUP BY \n    QUARTER\nORDER BY \n    QUARTER DESC;", "WITH GeographicDistribution AS (\n    SELECT \n        h.QUARTER,\n        h.INVESTMENT_COUNTRY,\n        h.HOLDING_ID,\n        CAST(h.CURRENCY_VALUE AS FLOAT) as Investment_Value,\n        f.SERIES_NAME\n    FROM \n        FUND_REPORTED_HOLDING h\n        JOIN FUND_REPORTED_INFO f ON h.ACCESSION_NUMBER = f.ACCESSION_NUMBER\n    WHERE \n        h.INVESTMENT_COUNTRY IS NOT NULL\n)\nSELECT \n    QUARTER,\n    INVESTMENT_COUNTRY,\n    COUNT(*) as Number_of_Holdings,\n    SUM(Investment_Value) as Total_Investment_Value,\n    COUNT(DISTINCT SERIES_NAME) as Number_of_Investing_Funds\nFROM \n    GeographicDistribution\nGROUP BY \n    QUARTER,\n    INVESTMENT_COUNTRY\nORDER BY \n    QUARTER DESC,\n    Total_Investment_Value DESC;", "WITH RankedFunds AS (\n    SELECT \n        QUARTER,\n        SERIES_NAME,\n        CAST(TOTAL_ASSETS AS FLOAT) as Assets,\n        ROW_NUMBER() OVER (PARTITION BY QUARTER ORDER BY CAST(TOTAL_ASSETS AS FLOAT) DESC) as Rank\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        TOTAL_ASSETS IS NOT NULL\n)\nSELECT \n    QUARTER,\n    SERIES_NAME,\n    Assets\nFROM \n    RankedFunds\nWHERE \n    Rank <= 5\nORDER BY \n    QUARTER DESC, \n    Assets DESC;", "WITH FundCounts AS (\n    SELECT \n        r.REGISTRANT_NAME,\n        f.SERIES_NAME,\n        f.SERIES_ID\n    FROM \n        REGISTRANT r\n        JOIN FUND_REPORTED_INFO f ON r.ACCESSION_NUMBER = f.ACCESSION_NUMBER\n)\nSELECT \n    REGISTRANT_NAME,\n    COUNT(DISTINCT SERIES_NAME) as Number_of_Funds,\n    COUNT(DISTINCT SERIES_ID) as Unique_Fund_IDs\nFROM \n    FundCounts\nGROUP BY \n    REGISTRANT_NAME\nORDER BY \n    Number_of_Funds DESC\nLIMIT 10;", "WITH LargeFunds AS (\n    SELECT \n        QUARTER,\n        COUNT(*) as Total_Funds,\n        COUNT(CASE WHEN CAST(TOTAL_ASSETS AS FLOAT) > 1000000000 THEN 1 END) as Billion_Plus_Funds\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        TOTAL_ASSETS IS NOT NULL\n    GROUP BY \n        QUARTER\n)\nSELECT \n    QUARTER,\n    Billion_Plus_Funds,\n    Total_Funds,\n    (Billion_Plus_Funds * 100.0 / Total_Funds) as Large_Fund_Percentage\nFROM \n    LargeFunds\nORDER BY \n    QUARTER DESC;", "SELECT \n    F.SERIES_NAME,\n    CAST(F.TOTAL_LIABILITIES AS FLOAT) / NULLIF(CAST(F.TOTAL_ASSETS AS FLOAT), 0) * 100 as Liability_Percentage,\n    F.TOTAL_ASSETS,\n    F.TOTAL_LIABILITIES\nFROM \n    FUND_REPORTED_INFO F\nWHERE \n    CAST(F.TOTAL_LIABILITIES AS FLOAT) / NULLIF(CAST(F.TOTAL_ASSETS AS FLOAT), 0) > 0.5\nORDER BY \n    Liability_Percentage DESC;", "WITH HoldingPercentages AS (\n    SELECT \n        F.SERIES_NAME,\n        H.ISSUER_NAME,\n        H.PERCENTAGE,\n        ROW_NUMBER() OVER (PARTITION BY F.SERIES_NAME ORDER BY CAST(H.PERCENTAGE AS FLOAT) DESC) as Position_Rank\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN FUND_REPORTED_HOLDING H \n            ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n    WHERE \n        H.PERCENTAGE IS NOT NULL\n)\nSELECT \n    SERIES_NAME,\n    ISSUER_NAME,\n    PERCENTAGE\nFROM \n    HoldingPercentages\nWHERE \n    Position_Rank = 1\nORDER BY \n    CAST(PERCENTAGE AS FLOAT) DESC;", "SELECT \n    F.SERIES_NAME,\n    IR.INTRST_RATE_CHANGE_10YR_DV01 as Ten_Year_Risk,\n    IR.INTRST_RATE_CHANGE_30YR_DV01 as Thirty_Year_Risk,\n    F.TOTAL_ASSETS\nFROM \n    FUND_REPORTED_INFO F\n    JOIN INTEREST_RATE_RISK IR \n        ON F.ACCESSION_NUMBER = IR.ACCESSION_NUMBER\nWHERE \n    IR.CURRENCY_CODE = 'USD'\n    AND (\n        CAST(IR.INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT) > 100000\n        OR CAST(IR.INTRST_RATE_CHANGE_30YR_DV01 AS FLOAT) > 100000\n    )\nORDER BY \n    CAST(IR.INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT) DESC;", "SELECT \n    F.SERIES_NAME,\n    F.NET_REALIZE_GAIN_NONDERIV_MON1,\n    F.NET_REALIZE_GAIN_NONDERIV_MON2,\n    F.NET_REALIZE_GAIN_NONDERIV_MON3,\n    F.TOTAL_ASSETS\nFROM \n    FUND_REPORTED_INFO F\nWHERE \n    CAST(NET_REALIZE_GAIN_NONDERIV_MON1 AS FLOAT) < 0\n    OR CAST(NET_REALIZE_GAIN_NONDERIV_MON2 AS FLOAT) < 0\n    OR CAST(NET_REALIZE_GAIN_NONDERIV_MON3 AS FLOAT) < 0\nORDER BY \n    CAST(NET_REALIZE_GAIN_NONDERIV_MON1 AS FLOAT);", "WITH CommitmentExposure AS (\n    SELECT \n        SERIES_NAME,\n        DELAYED_DELIVERY,\n        STANDBY_COMMITMENT,\n        TOTAL_ASSETS,\n        (CAST(DELAYED_DELIVERY AS FLOAT) + CAST(STANDBY_COMMITMENT AS FLOAT)) / \n        NULLIF(CAST(TOTAL_ASSETS AS FLOAT), 0) * 100 as Total_Commitment_Percentage\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        DELAYED_DELIVERY IS NOT NULL \n        AND STANDBY_COMMITMENT IS NOT NULL\n)\nSELECT \n    SERIES_NAME,\n    DELAYED_DELIVERY,\n    STANDBY_COMMITMENT,\n    Total_Commitment_Percentage\nFROM \n    CommitmentExposure\nWHERE \n    Total_Commitment_Percentage > 5\nORDER BY \n    Total_Commitment_Percentage DESC;", "SELECT \n    ISSUER_TYPE,\n    FAIR_VALUE_LEVEL,\n    COUNT(*) as Holding_Count,\n    SUM(CAST(CURRENCY_VALUE AS FLOAT)) as Total_Value,\n    COUNT(*) * 100.0 / SUM(COUNT(*)) OVER (PARTITION BY ISSUER_TYPE) as Percentage_of_Type\nFROM \n    FUND_REPORTED_HOLDING\nWHERE \n    ISSUER_TYPE IS NOT NULL \n    AND FAIR_VALUE_LEVEL IS NOT NULL\nGROUP BY \n    ISSUER_TYPE,\n    FAIR_VALUE_LEVEL\nORDER BY \n    ISSUER_TYPE,\n    FAIR_VALUE_LEVEL;", "SELECT \n    R.STATE,\n    COUNT(DISTINCT R.REGISTRANT_NAME) as Company_Count,\n    COUNT(DISTINCT F.SERIES_NAME) as Fund_Count,\n    SUM(CAST(F.NET_ASSETS AS FLOAT)) as Total_Net_Assets\nFROM \n    REGISTRANT R\n    JOIN FUND_REPORTED_INFO F ON R.ACCESSION_NUMBER = F.ACCESSION_NUMBER\nWHERE \n    R.STATE IS NOT NULL\nGROUP BY \n    R.STATE\nORDER BY \n    Total_Net_Assets DESC;", "SELECT \n    H.ISSUER_NAME,\n    COUNT(*) as Lending_Instances,\n    SUM(CAST(H.CURRENCY_VALUE AS FLOAT)) as Total_Value_Lent\nFROM \n    FUND_REPORTED_HOLDING H\n    JOIN SECURITIES_LENDING SL ON H.HOLDING_ID = SL.HOLDING_ID\nWHERE \n    SL.IS_LOAN_BY_FUND = 'Y'\nGROUP BY \n    H.ISSUER_NAME\nHAVING \n    COUNT(*) > 1\nORDER BY \n    Lending_Instances DESC,\n    Total_Value_Lent DESC;", "WITH FundFlows AS (\n    SELECT \n        F.SERIES_NAME,\n        F.NET_ASSETS,\n        LAG(F.NET_ASSETS) OVER (PARTITION BY F.SERIES_ID ORDER BY F.QUARTER) as Prev_Assets,\n        (F.SALES_FLOW_MON1 + F.SALES_FLOW_MON2 + F.SALES_FLOW_MON3) as Total_Sales\n    FROM \n        FUND_REPORTED_INFO F\n)\nSELECT \n    SERIES_NAME,\n    NET_ASSETS,\n    Prev_Assets,\n    Total_Sales,\n    ((CAST(NET_ASSETS AS FLOAT) - CAST(Prev_Assets AS FLOAT)) / \n     NULLIF(CAST(Prev_Assets AS FLOAT), 0)) * 100 as Asset_Change_Pct\nFROM \n    FundFlows\nWHERE \n    CAST(NET_ASSETS AS FLOAT) < CAST(Prev_Assets AS FLOAT)\n    AND CAST(Total_Sales AS FLOAT) > 0\nORDER BY \n    Asset_Change_Pct;", "WITH DefaultedSecurities AS (\n    SELECT \n        F.SERIES_NAME,\n        DS.ANNUALIZED_RATE,\n        H.CURRENCY_VALUE,\n        H.ISSUER_NAME\n    FROM \n        DEBT_SECURITY DS\n        JOIN FUND_REPORTED_HOLDING H ON DS.HOLDING_ID = H.HOLDING_ID\n        JOIN FUND_REPORTED_INFO F ON H.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n    WHERE \n        DS.IS_DEFAULT = 'Y'\n)\nSELECT \n    SERIES_NAME,\n    ISSUER_NAME,\n    ANNUALIZED_RATE,\n    CURRENCY_VALUE\nFROM \n    DefaultedSecurities\nORDER BY \n    CAST(ANNUALIZED_RATE AS FLOAT) DESC;", "WITH CounterpartyExposure AS (\n    SELECT \n        DC.DERIVATIVE_COUNTERPARTY_NAME,\n        COUNT(DISTINCT F.SERIES_NAME) as Fund_Count,\n        SUM(CAST(NFES.NOTIONAL_AMOUNT AS FLOAT)) as Total_Exposure\n    FROM \n        DERIVATIVE_COUNTERPARTY DC\n        JOIN NONFOREIGN_EXCHANGE_SWAP NFES ON DC.HOLDING_ID = NFES.HOLDING_ID\n        JOIN FUND_REPORTED_HOLDING H ON DC.HOLDING_ID = H.HOLDING_ID\n        JOIN FUND_REPORTED_INFO F ON H.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n    GROUP BY \n        DC.DERIVATIVE_COUNTERPARTY_NAME\n)\nSELECT \n    DERIVATIVE_COUNTERPARTY_NAME,\n    Fund_Count,\n    Total_Exposure,\n    Total_Exposure / SUM(Total_Exposure) OVER () * 100 as Exposure_Percentage\nFROM \n    CounterpartyExposure\nORDER BY \n    Total_Exposure DESC;", "SELECT \n    SERIES_NAME,\n    TOTAL_ASSETS,\n    LIQUIDATION_PREFERENCE,\n    (CAST(LIQUIDATION_PREFERENCE AS FLOAT) / \n     NULLIF(CAST(TOTAL_ASSETS AS FLOAT), 0)) * 100 as Preference_Ratio\nFROM \n    FUND_REPORTED_INFO\nWHERE \n    CAST(LIQUIDATION_PREFERENCE AS FLOAT) > 1000000\nORDER BY \n    Preference_Ratio DESC;", "SELECT \n    F.SERIES_NAME,\n    H.ISSUER_NAME,\n    CSC.CONVERSION_RATIO,\n    H.CURRENCY_VALUE\nFROM \n    FUND_REPORTED_INFO F\n    JOIN FUND_REPORTED_HOLDING H ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n    JOIN CONVERTIBLE_SECURITY_CURRENCY CSC ON H.HOLDING_ID = CSC.HOLDING_ID\nWHERE \n    CAST(CSC.CONVERSION_RATIO AS FLOAT) > 1\nORDER BY \n    CAST(CSC.CONVERSION_RATIO AS FLOAT) DESC;", "WITH FlowAnalysis AS (\n    SELECT \n        SERIES_NAME,\n        (CAST(REDEMPTION_FLOW_MON1 AS FLOAT) + \n         CAST(REDEMPTION_FLOW_MON2 AS FLOAT) + \n         CAST(REDEMPTION_FLOW_MON3 AS FLOAT)) as Total_Redemptions,\n        (CAST(SALES_FLOW_MON1 AS FLOAT) + \n         CAST(SALES_FLOW_MON2 AS FLOAT) + \n         CAST(SALES_FLOW_MON3 AS FLOAT)) as Total_Sales\n    FROM \n        FUND_REPORTED_INFO\n)\nSELECT \n    SERIES_NAME,\n    Total_Redemptions,\n    Total_Sales,\n    (Total_Redemptions - Total_Sales) as Net_Outflow\nFROM \n    FlowAnalysis\nWHERE \n    Total_Redemptions > Total_Sales\nORDER BY \n    Net_Outflow DESC;", "WITH PIMCOPerformance AS (\n    SELECT \n        F.SERIES_NAME,\n        CASE \n            WHEN F.SERIES_NAME LIKE '%BOND%' THEN 'Bond'\n            WHEN F.SERIES_NAME LIKE '%EQUITY%' THEN 'Equity'\n            ELSE 'Other'\n        END as Fund_Type,\n        M.MONTHLY_TOTAL_RETURN1,\n        F.TOTAL_ASSETS\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN REGISTRANT R ON F.ACCESSION_NUMBER = R.ACCESSION_NUMBER\n        JOIN MONTHLY_TOTAL_RETURN M ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n    WHERE \n        R.REGISTRANT_NAME LIKE '%PIMCO%'\n)\nSELECT \n    Fund_Type,\n    COUNT(*) as Fund_Count,\n    AVG(CAST(MONTHLY_TOTAL_RETURN1 AS FLOAT)) as Avg_Monthly_Return,\n    SUM(CAST(TOTAL_ASSETS AS FLOAT)) as Total_AUM\nFROM \n    PIMCOPerformance\nWHERE \n    Fund_Type IN ('Bond', 'Equity')\nGROUP BY \n    Fund_Type;", "WITH CategoryPerformance AS (\n    SELECT \n        H.ASSET_CAT,\n        AVG(CAST(M.MONTHLY_TOTAL_RETURN1 AS FLOAT)) as Avg_Return,\n        SUM(CAST(H.CURRENCY_VALUE AS FLOAT)) as Total_Value,\n        COUNT(DISTINCT F.SERIES_NAME) as Fund_Count\n    FROM \n        FUND_REPORTED_HOLDING H\n        JOIN FUND_REPORTED_INFO F ON H.ACCESSION_NUMBER = F.ACCESSION_NUMBER\n        JOIN MONTHLY_TOTAL_RETURN M ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n    WHERE \n        H.ASSET_CAT IS NOT NULL\n    GROUP BY \n        H.ASSET_CAT\n)\nSELECT \n    ASSET_CAT,\n    Avg_Return,\n    Total_Value,\n    Fund_Count\nFROM \n    CategoryPerformance\nORDER BY \n    Avg_Return DESC;", "WITH FlowTrends AS (\n    SELECT \n        F.SERIES_NAME,\n        F.SALES_FLOW_MON1,\n        F.SALES_FLOW_MON2,\n        ((CAST(F.SALES_FLOW_MON1 AS FLOAT) - CAST(F.SALES_FLOW_MON2 AS FLOAT)) / \n         NULLIF(CAST(F.SALES_FLOW_MON2 AS FLOAT), 0)) * 100 as Flow_Change_Pct\n    FROM \n        FUND_REPORTED_INFO F\n    WHERE \n        F.SALES_FLOW_MON1 IS NOT NULL \n        AND F.SALES_FLOW_MON2 IS NOT NULL\n)\nSELECT \n    SERIES_NAME,\n    SALES_FLOW_MON1 as Current_Flow,\n    SALES_FLOW_MON2 as Previous_Flow,\n    Flow_Change_Pct\nFROM \n    FlowTrends\nWHERE \n    ABS(Flow_Change_Pct) > 10\nORDER BY \n    ABS(Flow_Change_Pct) DESC;", "WITH PIMCODuration AS (\n    SELECT \n        F.SERIES_NAME,\n        IR.INTRST_RATE_CHANGE_10YR_DV01,\n        IR.INTRST_RATE_CHANGE_30YR_DV01,\n        F.TOTAL_ASSETS\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN REGISTRANT R ON F.ACCESSION_NUMBER = R.ACCESSION_NUMBER\n        JOIN INTEREST_RATE_RISK IR ON F.ACCESSION_NUMBER = IR.ACCESSION_NUMBER\n    WHERE \n        R.REGISTRANT_NAME LIKE '%PIMCO%'\n        AND F.SERIES_NAME LIKE '%BOND%'\n)\nSELECT \n    SERIES_NAME,\n    CAST(INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT) as Ten_Year_Duration,\n    CAST(INTRST_RATE_CHANGE_30YR_DV01 AS FLOAT) as Thirty_Year_Duration,\n    TOTAL_ASSETS\nFROM \n    PIMCODuration\nORDER BY \n    CAST(TOTAL_ASSETS AS FLOAT) DESC;", "WITH CreditQuality AS (\n    SELECT \n        F.SERIES_NAME,\n        F.CREDIT_SPREAD_10YR_INVEST,\n        F.CREDIT_SPREAD_10YR_NONINVEST,\n        F.TOTAL_ASSETS,\n        CAST(F.CREDIT_SPREAD_10YR_INVEST AS FLOAT) / \n        NULLIF(CAST(F.CREDIT_SPREAD_10YR_INVEST AS FLOAT) + \n               CAST(F.CREDIT_SPREAD_10YR_NONINVEST AS FLOAT), 0) * 100 as IG_Percentage\n    FROM \n        FUND_REPORTED_INFO F\n    WHERE \n        CAST(F.TOTAL_ASSETS AS FLOAT) > 1000000000\n)\nSELECT \n    SERIES_NAME,\n    IG_Percentage,\n    TOTAL_ASSETS\nFROM \n    CreditQuality\nORDER BY \n    CAST(TOTAL_ASSETS AS FLOAT) DESC;", "WITH RatePerformance AS (\n    SELECT \n        F.SERIES_NAME,\n        M.MONTHLY_TOTAL_RETURN1,\n        IR.INTRST_RATE_CHANGE_10YR_DV01\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN MONTHLY_TOTAL_RETURN M ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n        JOIN INTEREST_RATE_RISK IR ON F.ACCESSION_NUMBER = IR.ACCESSION_NUMBER\n    WHERE \n        CAST(IR.INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT) > 0\n)\nSELECT \n    SERIES_NAME,\n    AVG(CAST(MONTHLY_TOTAL_RETURN1 AS FLOAT)) as Avg_Return,\n    AVG(CAST(INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT)) as Avg_Rate_Sensitivity\nFROM \n    RatePerformance\nGROUP BY \n    SERIES_NAME\nORDER BY \n    Avg_Return DESC\nLIMIT 10;", "SELECT \n    H.INVESTMENT_COUNTRY,\n    COUNT(DISTINCT F.SERIES_NAME) as Fund_Count,\n    SUM(CAST(H.CURRENCY_VALUE AS FLOAT)) as Total_Value,\n    SUM(CAST(H.CURRENCY_VALUE AS FLOAT)) / \n    SUM(SUM(CAST(H.CURRENCY_VALUE AS FLOAT))) OVER () * 100 as Percentage\nFROM \n    FUND_REPORTED_HOLDING H\n    JOIN FUND_REPORTED_INFO F ON H.ACCESSION_NUMBER = F.ACCESSION_NUMBER\nWHERE \n    H.INVESTMENT_COUNTRY IS NOT NULL\n    AND H.INVESTMENT_COUNTRY != 'US'\nGROUP BY \n    H.INVESTMENT_COUNTRY\nORDER BY \n    Total_Value DESC;", "WITH IncomeAnalysis AS (\n    SELECT \n        F.SERIES_NAME,\n        SUM(CASE \n            WHEN DS.COUPON_TYPE = 'Fixed' THEN CAST(H.CURRENCY_VALUE AS FLOAT) \n            ELSE 0 \n        END) as Fixed_Income,\n        SUM(CASE \n            WHEN DS.COUPON_TYPE = 'Floating' THEN CAST(H.CURRENCY_VALUE AS FLOAT) \n            ELSE 0 \n        END) as Floating_Income,\n        SUM(CASE \n            WHEN SL.IS_LOAN_BY_FUND = 'Y' THEN CAST(H.CURRENCY_VALUE AS FLOAT) \n            ELSE 0 \n        END) as Securities_Lending_Income,\n        CAST(F.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN FUND_REPORTED_HOLDING H \n            ON F.ACCESSION_NUMBER = H.ACCESSION_NUMBER\n        LEFT JOIN DEBT_SECURITY DS \n            ON H.HOLDING_ID = DS.HOLDING_ID\n        LEFT JOIN SECURITIES_LENDING SL \n            ON H.HOLDING_ID = SL.HOLDING_ID\n    GROUP BY \n        F.SERIES_NAME,\n        F.TOTAL_ASSETS\n)\nSELECT \n    SERIES_NAME,\n    (Fixed_Income / Total_Assets * 100) as Fixed_Income_Pct,\n    (Floating_Income / Total_Assets * 100) as Floating_Income_Pct,\n    (Securities_Lending_Income / Total_Assets * 100) as Sec_Lending_Pct,\n    ((Fixed_Income + Floating_Income + Securities_Lending_Income) / Total_Assets * 100) as Total_Income_Pct,\n    Total_Assets\nFROM \n    IncomeAnalysis\nWHERE \n    Total_Assets > 0\nORDER BY \n    Total_Income_Pct DESC;", "WITH PIMCORiskProfile AS (\n    SELECT \n        F.SERIES_NAME,\n        F.TOTAL_ASSETS,\n        -- Duration Risk\n        IR.INTRST_RATE_CHANGE_10YR_DV01 as Duration_Risk,\n        -- Credit Risk\n        (CAST(F.CREDIT_SPREAD_10YR_NONINVEST AS FLOAT) / \n         NULLIF(CAST(F.TOTAL_ASSETS AS FLOAT), 0)) * 100 as High_Yield_Exposure,\n        -- Leverage\n        (CAST(F.BORROWING_PAY_WITHIN_1YR AS FLOAT) + \n         CAST(F.BORROWING_PAY_AFTER_1YR AS FLOAT)) / \n         NULLIF(CAST(F.TOTAL_ASSETS AS FLOAT), 0) * 100 as Leverage_Ratio,\n        -- Derivatives Exposure\n        COUNT(DISTINCT OD.HOLDING_ID) as Derivative_Positions,\n        -- Liquidity Profile\n        CAST(F.CASH_NOT_RPTD_IN_C_OR_D AS FLOAT) / \n        NULLIF(CAST(F.TOTAL_ASSETS AS FLOAT), 0) * 100 as Cash_Position,\n        -- Recent Performance\n        M.MONTHLY_TOTAL_RETURN1\n    FROM \n        FUND_REPORTED_INFO F\n        JOIN REGISTRANT R \n            ON F.ACCESSION_NUMBER = R.ACCESSION_NUMBER\n        LEFT JOIN INTEREST_RATE_RISK IR \n            ON F.ACCESSION_NUMBER = IR.ACCESSION_NUMBER\n        LEFT JOIN OTHER_DERIV OD \n            ON F.ACCESSION_NUMBER = OD.HOLDING_ID\n        LEFT JOIN MONTHLY_TOTAL_RETURN M \n            ON F.ACCESSION_NUMBER = M.ACCESSION_NUMBER\n    WHERE \n        R.REGISTRANT_NAME LIKE '%PIMCO%'\n        AND F.TOTAL_ASSETS IS NOT NULL\n    GROUP BY \n        F.SERIES_NAME,\n        F.TOTAL_ASSETS,\n        IR.INTRST_RATE_CHANGE_10YR_DV01,\n        F.CREDIT_SPREAD_10YR_NONINVEST,\n        F.BORROWING_PAY_WITHIN_1YR,\n        F.BORROWING_PAY_AFTER_1YR,\n        F.CASH_NOT_RPTD_IN_C_OR_D,\n        M.MONTHLY_TOTAL_RETURN1\n)\nSELECT \n    SERIES_NAME,\n    CAST(TOTAL_ASSETS AS FLOAT) / 1000000 as Assets_MM,\n    Duration_Risk as Duration_DV01,\n    High_Yield_Exposure as HY_Pct,\n    Leverage_Ratio as Leverage_Pct,\n    Derivative_Positions,\n    Cash_Position as Cash_Pct,\n    CAST(MONTHLY_TOTAL_RETURN1 AS FLOAT) as Latest_Monthly_Return,\n    CASE\n        WHEN Duration_Risk > 1 AND High_Yield_Exposure > 20 THEN 'High Risk'\n        WHEN Duration_Risk > 1 OR High_Yield_Exposure > 20 THEN 'Moderate Risk'\n        ELSE 'Conservative'\n    END as Risk_Category\nFROM \n    PIMCORiskProfile\nORDER BY \n    CAST(TOTAL_ASSETS AS FLOAT) DESC\nLIMIT 15;", "WITH CreditMetrics AS (\n    SELECT \n        f.QUARTER,\n        r.REGISTRANT_NAME,\n        f.SERIES_NAME,\n        CAST(f.CREDIT_SPREAD_10YR_INVEST AS FLOAT) as Investment_Grade,\n        CAST(f.CREDIT_SPREAD_10YR_NONINVEST AS FLOAT) as Non_Investment_Grade,\n        CAST(f.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO f\n        JOIN REGISTRANT r ON f.ACCESSION_NUMBER = r.ACCESSION_NUMBER\n    WHERE \n        f.CREDIT_SPREAD_10YR_INVEST IS NOT NULL \n        OR f.CREDIT_SPREAD_10YR_NONINVEST IS NOT NULL\n),\nPIMCOStats AS (\n    SELECT \n        QUARTER,\n        AVG(Investment_Grade) as PIMCO_Inv_Grade,\n        AVG(Non_Investment_Grade) as PIMCO_Non_Inv_Grade,\n        SUM(Total_Assets) as PIMCO_Total_Assets\n    FROM \n        CreditMetrics\n    WHERE \n        REGISTRANT_NAME LIKE '%PIMCO%'\n    GROUP BY \n        QUARTER\n),\nIndustryStats AS (\n    SELECT \n        QUARTER,\n        AVG(Investment_Grade) as Industry_Inv_Grade,\n        AVG(Non_Investment_Grade) as Industry_Non_Inv_Grade,\n        SUM(Total_Assets) as Industry_Total_Assets\n    FROM \n        CreditMetrics\n    GROUP BY \n        QUARTER\n)\nSELECT \n    p.QUARTER,\n    p.PIMCO_Inv_Grade,\n    i.Industry_Inv_Grade,\n    p.PIMCO_Non_Inv_Grade,\n    i.Industry_Non_Inv_Grade,\n    (p.PIMCO_Total_Assets / i.Industry_Total_Assets * 100) as PIMCO_Market_Share\nFROM \n    PIMCOStats p\n    JOIN IndustryStats i ON p.QUARTER = i.QUARTER\nORDER BY \n    p.QUARTER DESC;", "WITH InternationalHoldings AS (\n    SELECT \n        h.QUARTER,\n        r.REGISTRANT_NAME,\n        h.INVESTMENT_COUNTRY,\n        COUNT(*) as Holdings_Count,\n        SUM(CAST(h.CURRENCY_VALUE AS FLOAT)) as Total_Value\n    FROM \n        FUND_REPORTED_HOLDING h\n        JOIN FUND_REPORTED_INFO f ON h.ACCESSION_NUMBER = f.ACCESSION_NUMBER\n        JOIN REGISTRANT r ON f.ACCESSION_NUMBER = r.ACCESSION_NUMBER\n    WHERE \n        r.REGISTRANT_NAME LIKE '%PIMCO%'\n        AND h.INVESTMENT_COUNTRY IS NOT NULL\n    GROUP BY \n        h.QUARTER,\n        r.REGISTRANT_NAME,\n        h.INVESTMENT_COUNTRY\n),\nQuarterlyTotals AS (\n    SELECT \n        QUARTER,\n        SUM(Total_Value) as Quarter_Total_Value\n    FROM \n        InternationalHoldings\n    GROUP BY \n        QUARTER\n)\nSELECT \n    i.QUARTER,\n    i.INVESTMENT_COUNTRY,\n    i.Holdings_Count,\n    i.Total_Value,\n    (i.Total_Value / qt.Quarter_Total_Value * 100) as Country_Percentage\nFROM \n    InternationalHoldings i\n    JOIN QuarterlyTotals qt ON i.QUARTER = qt.QUARTER\nWHERE \n    i.INVESTMENT_COUNTRY != 'US'\nORDER BY \n    i.QUARTER DESC,\n    Total_Value DESC;", "WITH DurationMetrics AS (\n    SELECT \n        f.QUARTER,\n        r.REGISTRANT_NAME,\n        ir.INTRST_RATE_CHANGE_10YR_DV01 as Duration_10Y,\n        ir.INTRST_RATE_CHANGE_30YR_DV01 as Duration_30Y,\n        CAST(f.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO f\n        JOIN REGISTRANT r ON f.ACCESSION_NUMBER = r.ACCESSION_NUMBER\n        JOIN INTEREST_RATE_RISK ir ON f.ACCESSION_NUMBER = ir.ACCESSION_NUMBER\n    WHERE \n        f.SERIES_NAME LIKE '%BOND%'\n        OR f.SERIES_NAME LIKE '%FIXED%'\n        OR f.SERIES_NAME LIKE '%INCOME%'\n),\nCompanyDuration AS (\n    SELECT \n        QUARTER,\n        REGISTRANT_NAME,\n        AVG(CAST(Duration_10Y AS FLOAT)) as Avg_Duration_10Y,\n        AVG(CAST(Duration_30Y AS FLOAT)) as Avg_Duration_30Y,\n        SUM(Total_Assets) as Company_Assets\n    FROM \n        DurationMetrics\n    GROUP BY \n        QUARTER,\n        REGISTRANT_NAME\n)\nSELECT \n    p.QUARTER,\n    p.Avg_Duration_10Y as PIMCO_Duration_10Y,\n    p.Avg_Duration_30Y as PIMCO_Duration_30Y,\n    i.Avg_Duration_10Y as Industry_Avg_Duration_10Y,\n    i.Avg_Duration_30Y as Industry_Avg_Duration_30Y\nFROM \n    CompanyDuration p\n    CROSS JOIN (\n        SELECT \n            QUARTER,\n            AVG(Avg_Duration_10Y) as Avg_Duration_10Y,\n            AVG(Avg_Duration_30Y) as Avg_Duration_30Y\n        FROM \n            CompanyDuration\n        WHERE \n            REGISTRANT_NAME NOT LIKE '%PIMCO%'\n        GROUP BY \n            QUARTER\n    ) i\nWHERE \n    p.QUARTER = i.QUARTER\n    AND p.REGISTRANT_NAME LIKE '%PIMCO%'\nORDER BY \n    p.QUARTER DESC;", "WITH CashPositions AS (\n    SELECT \n        f.QUARTER,\n        r.REGISTRANT_NAME,\n        f.SERIES_NAME,\n        CAST(f.CASH_NOT_RPTD_IN_C_OR_D AS FLOAT) as Cash_Position,\n        CAST(f.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO f\n        JOIN REGISTRANT r ON f.ACCESSION_NUMBER = r.ACCESSION_NUMBER\n    WHERE \n        f.CASH_NOT_RPTD_IN_C_OR_D IS NOT NULL\n),\nCompanyCashMetrics AS (\n    SELECT \n        QUARTER,\n        REGISTRANT_NAME,\n        AVG(Cash_Position / NULLIF(Total_Assets, 0) * 100) as Avg_Cash_Percentage,\n        COUNT(DISTINCT SERIES_NAME) as Number_of_Funds\n    FROM \n        CashPositions\n    GROUP BY \n        QUARTER,\n        REGISTRANT_NAME\n    HAVING \n        Number_of_Funds >= 5\n)\nSELECT \n    p.QUARTER,\n    p.Avg_Cash_Percentage as PIMCO_Cash_Percentage,\n    i.Industry_Cash_Percentage,\n    p.Number_of_Funds as PIMCO_Funds,\n    p.Avg_Cash_Percentage - i.Industry_Cash_Percentage as Cash_Differential\nFROM \n    CompanyCashMetrics p\n    CROSS JOIN (\n        SELECT \n            QUARTER,\n            AVG(Avg_Cash_Percentage) as Industry_Cash_Percentage\n        FROM \n            CompanyCashMetrics\n        WHERE \n            REGISTRANT_NAME NOT LIKE '%PIMCO%'\n        GROUP BY \n            QUARTER\n    ) i\nWHERE \n    p.QUARTER = i.QUARTER\n    AND p.REGISTRANT_NAME LIKE '%PIMCO%'\nORDER BY \n    p.QUARTER DESC;", "WITH LendingActivity AS (\n    SELECT \n        f.QUARTER,\n        r.REGISTRANT_NAME,\n        f.SERIES_NAME,\n        COUNT(CASE WHEN sl.IS_LOAN_BY_FUND = 'Y' THEN 1 END) as Securities_Lent,\n        COUNT(*) as Total_Securities,\n        CAST(f.TOTAL_ASSETS AS FLOAT) as Fund_Assets\n    FROM \n        FUND_REPORTED_INFO f\n        JOIN REGISTRANT r ON f.ACCESSION_NUMBER = r.ACCESSION_NUMBER\n        LEFT JOIN SECURITIES_LENDING sl ON f.ACCESSION_NUMBER = sl.HOLDING_ID\n    GROUP BY \n        f.QUARTER,\n        r.REGISTRANT_NAME,\n        f.SERIES_NAME,\n        f.TOTAL_ASSETS\n),\nCompanyMetrics AS (\n    SELECT \n        QUARTER,\n        REGISTRANT_NAME,\n        SUM(Securities_Lent) as Total_Securities_Lent,\n        SUM(Total_Securities) as Total_Securities,\n        SUM(Fund_Assets) as Total_Assets,\n        COUNT(DISTINCT SERIES_NAME) as Number_of_Funds\n    FROM \n        LendingActivity\n    GROUP BY \n        QUARTER,\n        REGISTRANT_NAME\n)\nSELECT \n    p.QUARTER,\n    p.Total_Securities_Lent as PIMCO_Securities_Lent,\n    p.Total_Securities as PIMCO_Total_Securities,\n    (p.Total_Securities_Lent * 100.0 / NULLIF(p.Total_Securities, 0)) as PIMCO_Lending_Percentage,\n    (i.Total_Securities_Lent * 100.0 / NULLIF(i.Total_Securities, 0)) as Industry_Lending_Percentage\nFROM \n    CompanyMetrics p\n    CROSS JOIN (\n        SELECT \n            QUARTER,\n            SUM(Total_Securities_Lent) as Total_Securities_Lent,\n            SUM(Total_Securities) as Total_Securities\n        FROM \n            CompanyMetrics\n        WHERE \n            REGISTRANT_NAME NOT LIKE '%PIMCO%'\n        GROUP BY \n            QUARTER\n    ) i\nWHERE \n    p.QUARTER = i.QUARTER\n    AND p.REGISTRANT_NAME LIKE '%PIMCO%'\nORDER BY \n    p.QUARTER DESC;", "WITH AssetCategories AS (\n    SELECT \n        h.QUARTER,\n        r.REGISTRANT_NAME,\n        h.ASSET_CAT,\n        SUM(CAST(h.CURRENCY_VALUE AS FLOAT)) as Category_Value\n    FROM \n        FUND_REPORTED_HOLDING h\n        JOIN FUND_REPORTED_INFO f ON h.ACCESSION_NUMBER = f.ACCESSION_NUMBER\n        JOIN REGISTRANT r ON f.ACCESSION_NUMBER = r.ACCESSION_NUMBER\n    WHERE \n        h.ASSET_CAT IS NOT NULL\n    GROUP BY \n        h.QUARTER,\n        r.REGISTRANT_NAME,\n        h.ASSET_CAT\n),\nMarketShares AS (\n    SELECT \n        p.QUARTER,\n        p.ASSET_CAT,\n        p.Category_Value as PIMCO_Value,\n        t.Total_Category_Value,\n        (p.Category_Value * 100.0 / NULLIF(t.Total_Category_Value, 0)) as Market_Share\n    FROM \n        AssetCategories p\n        JOIN (\n            SELECT \n                QUARTER,\n                ASSET_CAT,\n                SUM(Category_Value) as Total_Category_Value\n            FROM \n                AssetCategories\n            GROUP BY \n                QUARTER,\n                ASSET_CAT\n        ) t ON p.QUARTER = t.QUARTER AND p.ASSET_CAT = t.ASSET_CAT\n    WHERE \n        p.REGISTRANT_NAME LIKE '%PIMCO%'\n)\nSELECT \n    QUARTER,\n    ASSET_CAT,\n    ROUND(PIMCO_Value / 1000000, 2) as PIMCO_Value_Millions,\n    ROUND(Total_Category_Value / 1000000, 2) as Total_Market_Millions,\n    ROUND(Market_Share, 2) as Market_Share_Percentage,\n    ROW_NUMBER() OVER (PARTITION BY QUARTER ORDER BY Market_Share DESC) as Category_Rank\nFROM \n    MarketShares\nORDER BY \n    QUARTER DESC,\n    Market_Share DESC;", "WITH CUSIPFrequency AS (\n    SELECT \n        ISSUER_CUSIP,\n        COUNT(*) as Usage_Count,\n        COUNT(DISTINCT ACCESSION_NUMBER) as Number_of_Funds,\n        SUM(CAST(CURRENCY_VALUE AS FLOAT)) as Total_Value\n    FROM \n        FUND_REPORTED_HOLDING\n    WHERE \n        ISSUER_CUSIP IS NOT NULL\n    GROUP BY \n        ISSUER_CUSIP\n)\nSELECT \n    ISSUER_CUSIP,\n    Usage_Count,\n    Number_of_Funds,\n    ROUND(Total_Value / 1000000, 2) as Total_Value_Millions\nFROM \n    CUSIPFrequency\nORDER BY \n    Usage_Count DESC\nLIMIT 20;", "WITH BondRates AS (\n    SELECT \n        d.QUARTER,\n        h.FAIR_VALUE_LEVEL,\n        AVG(CAST(d.ANNUALIZED_RATE AS FLOAT)) as Avg_Coupon_Rate,\n        COUNT(DISTINCT h.HOLDING_ID) as Number_of_Bonds,\n        SUM(CAST(h.CURRENCY_VALUE AS FLOAT)) as Total_Value\n    FROM \n        DEBT_SECURITY d\n        JOIN FUND_REPORTED_HOLDING h ON d.HOLDING_ID = h.HOLDING_ID\n    WHERE \n        d.ANNUALIZED_RATE IS NOT NULL\n    GROUP BY \n        d.QUARTER,\n        h.FAIR_VALUE_LEVEL\n)\nSELECT \n    QUARTER,\n    FAIR_VALUE_LEVEL,\n    ROUND(Avg_Coupon_Rate, 2) as Average_Coupon,\n    Number_of_Bonds,\n    ROUND(Total_Value / 1000000, 2) as Value_Millions\nFROM \n    BondRates\nORDER BY \n    QUARTER DESC,\n    FAIR_VALUE_LEVEL;", "SELECT \n    h.QUARTER,\n    h.FAIR_VALUE_LEVEL as Credit_Rating,\n    COUNT(CASE WHEN d.MATURITY_DATE <= DATE('now', '+1 year') THEN 1 END) as Short_Term,\n    COUNT(CASE WHEN d.MATURITY_DATE > DATE('now', '+1 year') \n               AND d.MATURITY_DATE <= DATE('now', '+5 year') THEN 1 END) as Medium_Term,\n    COUNT(CASE WHEN d.MATURITY_DATE > DATE('now', '+5 year') THEN 1 END) as Long_Term\nFROM \n    FUND_REPORTED_HOLDING h\n    JOIN DEBT_SECURITY d ON h.HOLDING_ID = d.HOLDING_ID\nWHERE \n    d.MATURITY_DATE IS NOT NULL\nGROUP BY \n    h.QUARTER,\n    h.FAIR_VALUE_LEVEL\nORDER BY \n    h.QUARTER DESC,\n    h.FAIR_VALUE_LEVEL;", "SELECT \n    h.QUARTER,\n    h.ISSUER_TYPE,\n    COUNT(*) as Total_Bonds,\n    COUNT(CASE WHEN d.ARE_ANY_INTEREST_PAYMENT = 'Y' THEN 1 END) as Missed_Payments,\n    (COUNT(CASE WHEN d.ARE_ANY_INTEREST_PAYMENT = 'Y' THEN 1 END) * 100.0 / COUNT(*)) as Missed_Payment_Rate\nFROM \n    FUND_REPORTED_HOLDING h\n    JOIN DEBT_SECURITY d ON h.HOLDING_ID = d.HOLDING_ID\nWHERE \n    h.ISSUER_TYPE IS NOT NULL\nGROUP BY \n    h.QUARTER,\n    h.ISSUER_TYPE\nHAVING \n    Total_Bonds >= 5\nORDER BY \n    h.QUARTER DESC,\n    Missed_Payment_Rate DESC;", "WITH BondDistribution AS (\n    SELECT \n        h.QUARTER,\n        h.FAIR_VALUE_LEVEL,\n        CASE \n            WHEN d.MATURITY_DATE <= DATE('now', '+1 year') THEN 'Short_Term'\n            WHEN d.MATURITY_DATE <= DATE('now', '+5 year') THEN 'Medium_Term'\n            ELSE 'Long_Term'\n        END as Maturity_Band,\n        COUNT(*) as Bond_Count,\n        SUM(CAST(h.CURRENCY_VALUE AS FLOAT)) as Total_Value\n    FROM \n        FUND_REPORTED_HOLDING h\n        JOIN DEBT_SECURITY d ON h.HOLDING_ID = d.HOLDING_ID\n    WHERE \n        d.MATURITY_DATE IS NOT NULL\n        AND h.FAIR_VALUE_LEVEL IS NOT NULL\n    GROUP BY \n        h.QUARTER,\n        h.FAIR_VALUE_LEVEL,\n        Maturity_Band\n)\nSELECT \n    QUARTER,\n    FAIR_VALUE_LEVEL,\n    Maturity_Band,\n    Bond_Count,\n    ROUND(Total_Value / 1000000, 2) as Value_Millions\nFROM \n    BondDistribution\nORDER BY \n    QUARTER DESC,\n    FAIR_VALUE_LEVEL,\n    Maturity_Band;", "WITH BondAllocation AS (\n    SELECT \n        QUARTER,\n        SUM(CAST(CREDIT_SPREAD_10YR_INVEST AS FLOAT)) as Investment_Grade_Exposure,\n        SUM(CAST(CREDIT_SPREAD_10YR_NONINVEST AS FLOAT)) as High_Yield_Exposure\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        CREDIT_SPREAD_10YR_INVEST IS NOT NULL\n        OR CREDIT_SPREAD_10YR_NONINVEST IS NOT NULL\n    GROUP BY \n        QUARTER\n)\nSELECT \n    QUARTER,\n    Investment_Grade_Exposure,\n    High_Yield_Exposure,\n    (Investment_Grade_Exposure * 100.0 / (Investment_Grade_Exposure + High_Yield_Exposure)) as Investment_Grade_Percentage\nFROM \n    BondAllocation\nORDER BY \n    QUARTER DESC;", "WITH DefaultMetrics AS (\n    SELECT \n        h.QUARTER,\n        h.FAIR_VALUE_LEVEL,\n        COUNT(DISTINCT h.HOLDING_ID) as Total_Bonds,\n        COUNT(DISTINCT CASE WHEN d.IS_DEFAULT = 'Y' THEN h.HOLDING_ID END) as Defaulted_Bonds,\n        COUNT(DISTINCT CASE WHEN d.ARE_ANY_INTEREST_PAYMENT = 'Y' THEN h.HOLDING_ID END) as Missed_Payments,\n        SUM(CAST(h.CURRENCY_VALUE AS FLOAT)) as Total_Value\n    FROM \n        FUND_REPORTED_HOLDING h\n        JOIN DEBT_SECURITY d ON h.HOLDING_ID = d.HOLDING_ID\n    WHERE \n        h.FAIR_VALUE_LEVEL IS NOT NULL\n    GROUP BY \n        h.QUARTER,\n        h.FAIR_VALUE_LEVEL\n)\nSELECT \n    QUARTER,\n    FAIR_VALUE_LEVEL,\n    Total_Bonds,\n    Defaulted_Bonds,\n    Missed_Payments,\n    ROUND(Total_Value / 1000000, 2) as Value_Millions,\n    ROUND(Defaulted_Bonds * 100.0 / NULLIF(Total_Bonds, 0), 2) as Default_Rate,\n    ROUND(Missed_Payments * 100.0 / NULLIF(Total_Bonds, 0), 2) as Missed_Payment_Rate\nFROM \n    DefaultMetrics\nWHERE \n    Total_Bonds >= 10\nORDER BY \n    QUARTER DESC,\n    FAIR_VALUE_LEVEL;", "WITH BondTypes AS (\n    SELECT \n        h.QUARTER,\n        h.FAIR_VALUE_LEVEL,\n        d.COUPON_TYPE,\n        COUNT(DISTINCT h.HOLDING_ID) as Number_of_Bonds,\n        SUM(CAST(h.CURRENCY_VALUE AS FLOAT)) as Total_Value,\n        AVG(CAST(d.ANNUALIZED_RATE AS FLOAT)) as Average_Rate\n    FROM \n        FUND_REPORTED_HOLDING h\n        JOIN DEBT_SECURITY d ON h.HOLDING_ID = d.HOLDING_ID\n    WHERE \n        h.FAIR_VALUE_LEVEL IS NOT NULL\n        AND d.COUPON_TYPE IS NOT NULL\n    GROUP BY \n        h.QUARTER,\n        h.FAIR_VALUE_LEVEL,\n        d.COUPON_TYPE\n),\nQuarterlyTotals AS (\n    SELECT \n        QUARTER,\n        FAIR_VALUE_LEVEL,\n        SUM(Total_Value) as Total_Value_By_Rating\n    FROM \n        BondTypes\n    GROUP BY \n        QUARTER,\n        FAIR_VALUE_LEVEL\n)\nSELECT \n    b.QUARTER,\n    b.FAIR_VALUE_LEVEL,\n    b.COUPON_TYPE,\n    b.Number_of_Bonds,\n    ROUND(b.Total_Value / 1000000, 2) as Value_Millions,\n    ROUND(b.Average_Rate, 2) as Avg_Rate,\n    ROUND(b.Total_Value * 100.0 / qt.Total_Value_By_Rating, 2) as Percentage_of_Rating\nFROM \n    BondTypes b\n    JOIN QuarterlyTotals qt ON b.QUARTER = qt.QUARTER \n        AND b.FAIR_VALUE_LEVEL = qt.FAIR_VALUE_LEVEL\nORDER BY \n    b.QUARTER DESC,\n    b.FAIR_VALUE_LEVEL,\n    b.Total_Value DESC;", "WITH LiquidityMetrics AS (\n    SELECT \n        f.QUARTER,\n        f.SERIES_NAME,\n        CAST(f.CASH_NOT_RPTD_IN_C_OR_D AS FLOAT) as Cash,\n        CAST(f.BORROWING_PAY_WITHIN_1YR AS FLOAT) as Short_Term_Obligations,\n        CAST(f.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO f\n    WHERE \n        f.CASH_NOT_RPTD_IN_C_OR_D IS NOT NULL\n        AND f.TOTAL_ASSETS > 0\n)\nSELECT \n    QUARTER,\n    SERIES_NAME,\n    ROUND(Cash / 1000000, 2) as Cash_Millions,\n    ROUND(Cash * 100.0 / Total_Assets, 2) as Cash_Percentage,\n    ROUND(Cash / NULLIF(Short_Term_Obligations, 0), 2) as Cash_Coverage_Ratio\nFROM \n    LiquidityMetrics\nORDER BY \n    QUARTER DESC,\n    Cash_Percentage DESC;", "WITH InterestRateSensitivity AS (\n    SELECT \n        f.QUARTER,\n        r.REGISTRANT_NAME,\n        f.SERIES_NAME,\n        CAST(ir.INTRST_RATE_CHANGE_10YR_DV01 AS FLOAT) as DV01_10Y,\n        CAST(ir.INTRST_RATE_CHANGE_30YR_DV01 AS FLOAT) as DV01_30Y,\n        CAST(f.TOTAL_ASSETS AS FLOAT) as Total_Assets\n    FROM \n        FUND_REPORTED_INFO f\n        JOIN REGISTRANT r ON f.ACCESSION_NUMBER = r.ACCESSION_NUMBER\n        JOIN INTEREST_RATE_RISK ir ON f.ACCESSION_NUMBER = ir.ACCESSION_NUMBER\n    WHERE \n        ir.INTRST_RATE_CHANGE_10YR_DV01 IS NOT NULL\n        OR ir.INTRST_RATE_CHANGE_30YR_DV01 IS NOT NULL\n)\nSELECT \n    QUARTER,\n    REGISTRANT_NAME,\n    SERIES_NAME,\n    ROUND(DV01_10Y, 4) as DV01_10Y,\n    ROUND(DV01_30Y, 4) as DV01_30Y,\n    ROUND(Total_Assets / 1000000, 2) as Assets_Millions\nFROM \n    InterestRateSensitivity\nORDER BY \n    QUARTER DESC,\n    (DV01_10Y + DV01_30Y) DESC\nLIMIT 20;", "WITH LeverageMetrics AS (\n    SELECT \n        QUARTER,\n        COUNT(DISTINCT SERIES_NAME) as Total_Funds,\n        AVG(CAST(BORROWING_PAY_WITHIN_1YR AS FLOAT) + \n            CAST(BORROWING_PAY_AFTER_1YR AS FLOAT)) as Avg_Borrowing,\n        MAX(CAST(BORROWING_PAY_WITHIN_1YR AS FLOAT) + \n            CAST(BORROWING_PAY_AFTER_1YR AS FLOAT)) as Max_Borrowing,\n        AVG(CAST(TOTAL_ASSETS AS FLOAT)) as Avg_Assets\n    FROM \n        FUND_REPORTED_INFO\n    WHERE \n        BORROWING_PAY_WITHIN_1YR IS NOT NULL\n        AND BORROWING_PAY_AFTER_1YR IS NOT NULL\n    GROUP BY \n        QUARTER\n)\nSELECT \n    QUARTER,\n    Total_Funds,\n    ROUND(Avg_Borrowing / 1000000, 2) as Avg_Borrowing_Millions,\n    ROUND(Max_Borrowing / 1000000, 2) as Max_Borrowing_Millions,\n    ROUND((Avg_Borrowing / Avg_Assets * 100), 2) as Avg_Leverage_Percentage\nFROM \n    LeverageMetrics\nORDER BY \n    QUARTER DESC;"]}